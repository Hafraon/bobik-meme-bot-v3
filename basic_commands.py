#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üß†üòÇüî• –û—Å–Ω–æ–≤–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞ üß†üòÇüî•
"""

import logging
from datetime import datetime

from aiogram import Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton

from config.settings import TEXTS, EMOJI
from database.database import get_or_create_user, update_user_points

logger = logging.getLogger(__name__)

async def cmd_start(message: Message):
    """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start"""
    user = message.from_user
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–±–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    await get_or_create_user(
        user_id=user.id,
        username=user.username,
        first_name=user.first_name,
        last_name=user.last_name
    )
    
    # –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ —à–≤–∏–¥–∫–∏—Ö –¥—ñ–π
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text=f"{EMOJI['laugh']} –ú–µ–º", callback_data="get_meme"),
            InlineKeyboardButton(text=f"{EMOJI['brain']} –ê–Ω–µ–∫–¥–æ—Ç", callback_data="get_joke")
        ],
        [
            InlineKeyboardButton(text=f"{EMOJI['fire']} –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∂–∞—Ä—Ç", callback_data="submit_content"),
            InlineKeyboardButton(text=f"{EMOJI['profile']} –ü—Ä–æ—Ñ—ñ–ª—å", callback_data="show_profile")
        ],
        [
            InlineKeyboardButton(text=f"{EMOJI['calendar']} –©–æ–¥–µ–Ω–Ω–∞ —Ä–æ–∑—Å–∏–ª–∫–∞", callback_data="toggle_daily"),
            InlineKeyboardButton(text=f"{EMOJI['top']} –¢–û–ü –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤", callback_data="show_leaderboard")
        ]
    ])
    
    await message.answer(
        TEXTS["start"],
        reply_markup=keyboard
    )
    
    logger.info(f"üß† –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.id} –∑–∞–ø—É—Å—Ç–∏–≤ –±–æ—Ç–∞")

async def cmd_help(message: Message):
    """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /help"""
    user = message.from_user
    
    # –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑ –∫–æ—Ä–∏—Å–Ω–∏–º–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text=f"{EMOJI['laugh']} –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –º–µ–º", callback_data="get_meme"),
            InlineKeyboardButton(text=f"{EMOJI['brain']} –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∞–Ω–µ–∫–¥–æ—Ç", callback_data="get_joke")
        ],
        [
            InlineKeyboardButton(text=f"{EMOJI['fire']} –ü–æ—á–∞—Ç–∏ –∑–∞—Ä–æ–±–ª—è—Ç–∏ –±–∞–ª–∏", callback_data="submit_content")
        ]
    ])
    
    await message.answer(
        TEXTS["help"],
        reply_markup=keyboard
    )
    
    logger.info(f"üòÇ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.id} –ø–æ–¥–∏–≤–∏–≤—Å—è –¥–æ–≤—ñ–¥–∫—É")

async def cmd_stats(message: Message):
    """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /stats - –∑–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞"""
    from database.database import get_db_session
    from database.models import User, Content, Duel
    
    with get_db_session() as session:
        total_users = session.query(User).count()
        total_content = session.query(Content).count()
        total_duels = session.query(Duel).count()
        
        # –¢–æ–ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
        top_user = session.query(User).order_by(User.points.desc()).first()
        
        stats_text = (
            f"{EMOJI['stats']} <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–û–¢–ê</b> {EMOJI['stats']}\n\n"
            f"{EMOJI['profile']} <b>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:</b> {total_users}\n"
            f"{EMOJI['brain']}{EMOJI['laugh']} <b>–ö–æ–Ω—Ç–µ–Ω—Ç—É:</b> {total_content}\n"
            f"{EMOJI['vs']} <b>–î—É–µ–ª–µ–π:</b> {total_duels}\n\n"
        )
        
        if top_user:
            stats_text += (
                f"{EMOJI['crown']} <b>–õ—ñ–¥–µ—Ä:</b> {top_user.first_name or '–ù–µ–≤—ñ–¥–æ–º–∏–π'}\n"
                f"{EMOJI['fire']} <b>–ë–∞–ª—ñ–≤:</b> {top_user.points}\n"
                f"{EMOJI['star']} <b>–†–∞–Ω–≥:</b> {top_user.rank}"
            )
        
        await message.answer(stats_text)

# ===== CALLBACK –û–ë–†–û–ë–ù–ò–ö–ò =====

async def callback_get_meme(callback_query):
    """Callback –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –º–µ–º—É"""
    from handlers.content_handlers import send_meme
    await send_meme(callback_query.message, from_callback=True)
    await callback_query.answer()

async def callback_get_joke(callback_query):
    """Callback –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–Ω–µ–∫–¥–æ—Ç—É"""
    from handlers.content_handlers import send_joke
    await send_joke(callback_query.message, from_callback=True)
    await callback_query.answer()

async def callback_show_profile(callback_query):
    """Callback –¥–ª—è –ø–æ–∫–∞–∑—É –ø—Ä–æ—Ñ—ñ–ª—é"""
    from handlers.gamification_handlers import show_profile
    await show_profile(callback_query.message, callback_query.from_user.id)
    await callback_query.answer()

async def callback_show_leaderboard(callback_query):
    """Callback –¥–ª—è –ø–æ–∫–∞–∑—É —Ç–∞–±–ª–∏—Ü—ñ –ª—ñ–¥–µ—Ä—ñ–≤"""
    from handlers.gamification_handlers import show_leaderboard
    await show_leaderboard(callback_query.message)
    await callback_query.answer()

async def callback_toggle_daily(callback_query):
    """Callback –¥–ª—è –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–æ—ó —Ä–æ–∑—Å–∏–ª–∫–∏"""
    from handlers.gamification_handlers import toggle_daily_subscription
    await toggle_daily_subscription(callback_query.message, callback_query.from_user.id)
    await callback_query.answer()

async def callback_submit_content(callback_query):
    """Callback –¥–ª—è –ø–æ—á–∞—Ç–∫—É –ø–æ–¥–∞—á—ñ –∫–æ–Ω—Ç–µ–Ω—Ç—É"""
    await callback_query.message.answer(
        f"{EMOJI['fire']} <b>–Ø–∫ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Å–≤—ñ–π –∫–æ–Ω—Ç–µ–Ω—Ç:</b>\n\n"
        f"{EMOJI['brain']} –î–ª—è –∞–Ω–µ–∫–¥–æ—Ç—É - –Ω–∞–ø–∏—à–∏ /submit —ñ –æ–¥—Ä–∞–∑—É —Ç–µ–∫—Å—Ç –∞–Ω–µ–∫–¥–æ—Ç—É\n"
        f"{EMOJI['laugh']} –î–ª—è –º–µ–º—É - –Ω–∞–¥—ñ—à–ª–∏ /submit —ñ –ø—Ä–∏–∫—Ä—ñ–ø–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É –∑ –ø—ñ–¥–ø–∏—Å–æ–º\n\n"
        f"{EMOJI['star']} <b>–ü—Ä–∏–∫–ª–∞–¥:</b>\n"
        f"<code>/submit –ß–æ–º—É –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏ –ø'—é—Ç—å –∫–∞–≤—É? –ë–æ –±–µ–∑ –Ω–µ—ó –∫–æ–¥ –Ω–µ –∫–æ–º–ø—ñ–ª—é—î—Ç—å—Å—è! {EMOJI['brain']}</code>"
    )
    await callback_query.answer()

def register_basic_handlers(dp: Dispatcher):
    """–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤"""
    
    # –ö–æ–º–∞–Ω–¥–∏
    dp.message.register(cmd_start, Command("start"))
    dp.message.register(cmd_help, Command("help"))
    dp.message.register(cmd_stats, Command("stats"))
    
    # Callback –∑–∞–ø–∏—Ç–∏
    dp.callback_query.register(callback_get_meme, F.data == "get_meme")
    dp.callback_query.register(callback_get_joke, F.data == "get_joke")
    dp.callback_query.register(callback_show_profile, F.data == "show_profile")
    dp.callback_query.register(callback_show_leaderboard, F.data == "show_leaderboard")
    dp.callback_query.register(callback_toggle_daily, F.data == "toggle_daily")
    dp.callback_query.register(callback_submit_content, F.data == "submit_content")