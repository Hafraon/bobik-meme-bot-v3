#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üî• HANDLERS –ú–û–î–£–õ–¨ - –ü–û–í–ù–ò–ô –§–£–ù–ö–¶–Ü–û–ù–ê–õ –ó –ë–î üî•
"""

import logging
from aiogram import Dispatcher, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, CommandStart

logger = logging.getLogger(__name__)

def register_all_handlers(dp: Dispatcher):
    """üî• –†–ï–Ñ–°–¢–†–ê–¶–Ü–Ø –í–°–Ü–• HANDLERS –ó –ü–û–í–ù–ò–ú –§–£–ù–ö–¶–Ü–û–ù–ê–õ–û–ú –ë–î"""
    logger.info("üî• –ü–æ—á–∞—Ç–æ–∫ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –ø–æ–≤–Ω–æ—Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏—Ö handlers...")
    
    # –ö–æ–º–∞–Ω–¥–∞ /start –∑ —Ä–µ–∞–ª—å–Ω–æ—é –ë–î
    @dp.message(CommandStart())
    async def start_handler(message: Message):
        user = message.from_user
        
        # ‚úÖ –†–ï–ê–õ–¨–ù–ï –°–¢–í–û–†–ï–ù–ù–Ø –ö–û–†–ò–°–¢–£–í–ê–ß–ê –í –ë–î
        try:
            from database import get_or_create_user, update_user_points
            
            db_user = await get_or_create_user(
                telegram_id=user.id,
                username=user.username,
                first_name=user.first_name,
                last_name=user.last_name
            )
            
            # –ë–æ–Ω—É—Å –∑–∞ –ø–µ—Ä—à—É –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
            if db_user:
                await update_user_points(user.id, 1)
                points_info = f"üî• –ë–∞–ª–∏: <b>{getattr(db_user, 'points', 0) + 1}</b>"
                rank_info = f"üèÜ –†–∞–Ω–≥: <b>{getattr(db_user, 'rank', 'ü§° –ù–æ–≤–∞—á–æ–∫')}</b>"
            else:
                points_info = "üî• –ë–∞–ª–∏: <b>1</b> (+1 –∑–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å)"
                rank_info = "üèÜ –†–∞–Ω–≥: <b>ü§° –ù–æ–≤–∞—á–æ–∫</b>"
                
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ë–î –ø–æ–º–∏–ª–∫–∞ –≤ /start: {e}")
            points_info = "üî• –ë–∞–ª–∏: <b>1</b> (—Å—Ç–∞—Ä—Ç)"
            rank_info = "üèÜ –†–∞–Ω–≥: <b>ü§° –ù–æ–≤–∞—á–æ–∫</b>"
        
        await message.answer(
            f"ü§ñ <b>–ü—Ä–∏–≤—ñ—Ç, {user.first_name or '–î—Ä—É–∂–µ'}! –Ø —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –º–µ–º-–±–æ—Ç –∑ –≥–µ–π–º—ñ—Ñ—ñ–∫–∞—Ü—ñ—î—é!</b>\n\n"
            f"‚úÖ <b>–í–∞—à –ø—Ä–æ—Ñ—ñ–ª—å –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ:</b>\n"
            f"{points_info}\n"
            f"{rank_info}\n\n"
            f"üìã <b>–ö–æ–º–∞–Ω–¥–∏:</b>\n"
            f"‚Ä¢ /help - –ø–æ–≤–Ω–∞ –¥–æ–≤—ñ–¥–∫–∞\n"
            f"‚Ä¢ /meme - –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –º–µ–º (+2 –±–∞–ª–∏)\n"
            f"‚Ä¢ /anekdot - —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –∞–Ω–µ–∫–¥–æ—Ç (+2 –±–∞–ª–∏)\n"
            f"‚Ä¢ /profile - –¥–µ—Ç–∞–ª—å–Ω–∏–π –ø—Ä–æ—Ñ—ñ–ª—å\n"
            f"‚Ä¢ /top - —Ä–µ–∞–ª—å–Ω–∞ —Ç–∞–±–ª–∏—Ü—è –ª—ñ–¥–µ—Ä—ñ–≤\n"
            f"‚Ä¢ /submit - –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç (+10 –±–∞–ª—ñ–≤)\n"
            f"‚Ä¢ /admin - –ø–∞–Ω–µ–ª—å –∞–¥–º—ñ–Ω–∞\n\n"
            f"üéÆ <b>–ì–µ–π–º—ñ—Ñ—ñ–∫–∞—Ü—ñ—è:</b>\n"
            f"–ó–∞—Ä–æ–±–ª—è–π—Ç–µ –±–∞–ª–∏ –∑–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å —Ç–∞ –ø—ñ–¥–≤–∏—â—É–π—Ç–µ —Å–≤—ñ–π —Ä–∞–Ω–≥!"
        )
    
    # –ö–æ–º–∞–Ω–¥–∞ /profile –∑ —Ä–µ–∞–ª—å–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏ –∑ –ë–î
    @dp.message(Command("profile"))
    async def profile_handler(message: Message):
        user = message.from_user
        
        try:
            from database import get_or_create_user
            
            db_user = await get_or_create_user(
                telegram_id=user.id,
                username=user.username,
                first_name=user.first_name
            )
            
            if db_user:
                # ‚úÖ –†–ï–ê–õ–¨–ù–Ü –î–ê–ù–Ü –ó –ë–î
                points = getattr(db_user, 'points', 0)
                rank = getattr(db_user, 'rank', 'ü§° –ù–æ–≤–∞—á–æ–∫')
                content_submitted = getattr(db_user, 'jokes_submitted', 0) + getattr(db_user, 'memes_submitted', 0)
                content_approved = getattr(db_user, 'jokes_approved', 0) + getattr(db_user, 'memes_approved', 0)
                duels_won = getattr(db_user, 'duels_won', 0)
                created_at = getattr(db_user, 'created_at', '–°—å–æ–≥–æ–¥–Ω—ñ')
                
                status_text = "‚úÖ <b>–ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ –ë–î</b>"
            else:
                # Fallback —è–∫—â–æ –ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
                points = 0
                rank = "ü§° –ù–æ–≤–∞—á–æ–∫"
                content_submitted = 0
                content_approved = 0
                duels_won = 0
                created_at = "–°—å–æ–≥–æ–¥–Ω—ñ"
                status_text = "‚ö†Ô∏è <i>–õ–æ–∫–∞–ª—å–Ω–∏–π —Ä–µ–∂–∏–º</i>"
                
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ë–î –ø–æ–º–∏–ª–∫–∞ –≤ /profile: {e}")
            points = 0
            rank = "ü§° –ù–æ–≤–∞—á–æ–∫"
            content_submitted = 0
            content_approved = 0
            duels_won = 0
            created_at = "–°—å–æ–≥–æ–¥–Ω—ñ"
            status_text = "‚ö†Ô∏è <i>–ü–æ–º–∏–ª–∫–∞ –ë–î</i>"
        
        await message.answer(
            f"üë§ <b>–ü–†–û–§–Ü–õ–¨ –ö–û–†–ò–°–¢–£–í–ê–ß–ê</b>\n\n"
            f"üÜî ID: <code>{user.id}</code>\n"
            f"üë§ –Ü–º'—è: {user.first_name or '–ù–µ–≤—ñ–¥–æ–º–µ'}\n"
            f"üì± Username: @{user.username or '–ù–µ–º–∞—î'}\n"
            f"üåê –ú–æ–≤–∞: {user.language_code or 'uk'}\n\n"
            f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
            f"üî• –ë–∞–ª–∏: <b>{points}</b>\n"
            f"üèÜ –†–∞–Ω–≥: <b>{rank}</b>\n"
            f"üìù –ö–æ–Ω—Ç–µ–Ω—Ç—É –ø–æ–¥–∞–Ω–æ: <b>{content_submitted}</b>\n"
            f"‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç—É —Å—Ö–≤–∞–ª–µ–Ω–æ: <b>{content_approved}</b>\n"
            f"‚öîÔ∏è –î—É–µ–ª–µ–π –≤–∏–≥—Ä–∞–Ω–æ: <b>{duels_won}</b>\n"
            f"üìÖ –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å: {created_at}\n\n"
            f"üíæ –°—Ç–∞—Ç—É—Å: {status_text}"
        )
    
    # –ö–æ–º–∞–Ω–¥–∞ /top –∑ —Ä–µ–∞–ª—å–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏ –∑ –ë–î
    @dp.message(Command("top"))
    async def top_handler(message: Message):
        try:
            from database import get_leaderboard
            
            # ‚úÖ –†–ï–ê–õ–¨–ù–ê –¢–ê–ë–õ–ò–¶–Ø –õ–Ü–î–ï–†–Ü–í –ó –ë–î
            leaderboard = await get_leaderboard(limit=10)
            
            if leaderboard and len(leaderboard) > 0:
                # –†–µ–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∑ –ë–î
                text = "üèÜ <b>–†–ï–ê–õ–¨–ù–ê –¢–ê–ë–õ–ò–¶–Ø –õ–Ü–î–ï–†–Ü–í</b>\n\n"
                
                for leader in leaderboard:
                    position = leader.get('position', '?')
                    username = leader.get('username', '–ù–µ–≤—ñ–¥–æ–º–∏–π')
                    points = leader.get('points', 0)
                    rank = leader.get('rank', 'ü§° –ù–æ–≤–∞—á–æ–∫')
                    
                    if position == 1:
                        emoji = "üëë"
                    elif position == 2:
                        emoji = "ü•à"
                    elif position == 3:
                        emoji = "ü•â"
                    else:
                        emoji = "üèÖ"
                    
                    text += f"{position}. {emoji} {username} - <b>{points}</b> –±–∞–ª—ñ–≤ ({rank})\n"
                
                text += "\nüíæ <b>–î–∞–Ω—ñ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö</b> ‚úÖ"
                
            else:
                # Fallback —è–∫—â–æ –ë–î –ø–æ—Ä–æ–∂–Ω—è
                text = (
                    "üèÜ <b>–¢–ê–ë–õ–ò–¶–Ø –õ–Ü–î–ï–†–Ü–í</b>\n\n"
                    "üìä <i>–ü–æ–∫–∏ —â–æ –Ω–µ–º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –±–∞–ª–∞–º–∏</i>\n\n"
                    "üöÄ <b>–°—Ç–∞–Ω—å—Ç–µ –ø–µ—Ä—à–∏–º!</b>\n"
                    "‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /meme –∞–±–æ /anekdot\n"
                    "‚Ä¢ –ù–∞–¥—Å–∏–ª–∞–π—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ /submit\n"
                    "‚Ä¢ –ë–µ—Ä—ñ—Ç—å —É—á–∞—Å—Ç—å –≤ –¥—É–µ–ª—è—Ö\n\n"
                    "üíæ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –∞–∫—Ç–∏–≤–Ω–∞ ‚úÖ"
                )
                
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ë–î –ø–æ–º–∏–ª–∫–∞ –≤ /top: {e}")
            text = (
                "üèÜ <b>–¢–ê–ë–õ–ò–¶–Ø –õ–Ü–î–ï–†–Ü–í</b>\n\n"
                "‚ö†Ô∏è <i>–¢–∏–º—á–∞—Å–æ–≤–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –ë–î</i>\n\n"
                "üîÑ –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
            )
        
        await message.answer(text)
    
    # –ö–æ–º–∞–Ω–¥–∞ /meme –∑ —Ä–µ–∞–ª—å–Ω–∏–º –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –±–∞–ª—ñ–≤
    @dp.message(Command("meme"))
    async def meme_handler(message: Message):
        user = message.from_user
        
        # ‚úÖ –†–ï–ê–õ–¨–ù–ï –ù–ê–†–ê–•–£–í–ê–ù–ù–Ø –ë–ê–õ–Ü–í
        try:
            from database import get_random_approved_content, update_user_points
            
            # –û—Ç—Ä–∏–º—É—î–º–æ –º–µ–º –∑ –ë–î
            content = await get_random_approved_content(content_type="meme")
            
            if content and hasattr(content, 'text'):
                meme_text = content.text
                source_info = "üíæ <i>–ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö</i>"
            else:
                # Fallback –º–µ–º–∏
                fallback_memes = [
                    "üòÇ <b>–ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç —ñ –∫–∞–≤–∞</b>\n\n–ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç –∑–∞—Ö–æ–¥–∏—Ç—å –≤ –∫–∞—Ñ–µ —ñ –∑–∞–º–æ–≤–ª—è—î –∫–∞–≤—É.\n–ë–∞—Ä–∏—Å—Ç–∞ –ø–∏—Ç–∞—î: 'Java —á–∏ Python?'\n–ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç: '–¢–∞ –Ω—ñ, –∑–≤–∏—á–∞–π–Ω—É –∫–∞–≤—É!'",
                    "ü§£ <b>–†—ñ–∑–¥–≤–æ —Ç–∞ –•–µ–ª–ª–æ—É—ó–Ω</b>\n\n–ß–æ–º—É –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏ –∑–∞–≤–∂–¥–∏ –ø–ª—É—Ç–∞—é—Ç—å –†—ñ–∑–¥–≤–æ —Ç–∞ –•–µ–ª–ª–æ—É—ó–Ω?\n–ë–æ Oct 31 == Dec 25!",
                    "üòÑ <b>–õ–∞–º–ø–æ—á–∫–∞ —Ç–∞ –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏</b>\n\n–°–∫—ñ–ª—å–∫–∏ –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç—ñ–≤ –ø–æ—Ç—Ä—ñ–±–Ω–æ, —â–æ–± –∑–∞–∫—Ä—É—Ç–∏—Ç–∏ –ª–∞–º–ø–æ—á–∫—É?\n–ñ–æ–¥–Ω–æ–≥–æ - —Ü–µ –∞–ø–∞—Ä–∞—Ç–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞!",
                    "ü§î <b>–î–≤–∞ –±–∞–π—Ç–∏ –≤ –±–∞—Ä—ñ</b>\n\n–î–≤–∞ –±–∞–π—Ç–∏ –∑—É—Å—Ç—Ä—ñ–ª–∏—Å—è –≤ –±–∞—Ä—ñ.\n–û–¥–∏–Ω –∫–∞–∂–µ: '–£ –º–µ–Ω–µ –±—ñ—Ç –±–æ–ª–∏—Ç—å!'\n–î—Ä—É–≥–∏–π: '–¢–æ –ø–æ–±–∞–π—Ç–∏—Å—è —Ç—Ä–µ–±–∞!'"
                ]
                import random
                meme_text = random.choice(fallback_memes)
                source_info = "üîÑ <i>Fallback</i>"
            
            # –ù–∞—Ä–∞—Ö–æ–≤—É—î–º–æ –±–∞–ª–∏
            points_added = await update_user_points(user.id, 2)
            if points_added:
                bonus_text = "\n\nüî• <b>+2 –±–∞–ª–∏ –∑–∞ –ø–µ—Ä–µ–≥–ª—è–¥!</b>"
            else:
                bonus_text = "\n\nüî• <i>–ë–∞–ª–∏ –±—É–¥—É—Ç—å –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω—ñ –ø—ñ—Å–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é</i>"
            
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ë–î –ø–æ–º–∏–ª–∫–∞ –≤ /meme: {e}")
            meme_text = "üòÇ <b>–ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç —ñ –∫–∞–≤–∞</b>\n\n–ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç –∑–∞—Ö–æ–¥–∏—Ç—å –≤ –∫–∞—Ñ–µ —ñ –∑–∞–º–æ–≤–ª—è—î –∫–∞–≤—É.\n–ë–∞—Ä–∏—Å—Ç–∞: 'Java —á–∏ Python?'\n–ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç: '–ó–≤–∏—á–∞–π–Ω—É!'"
            bonus_text = "\n\n‚ö†Ô∏è <i>–¢–∏–º—á–∞—Å–æ–≤–∞ –ø–æ–º–∏–ª–∫–∞ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –±–∞–ª—ñ–≤</i>"
            source_info = "üîÑ <i>Fallback</i>"
        
        await message.answer(f"üé≠ <b>–û—Å—å –≤–∞—à –º–µ–º:</b>\n\n{meme_text}{bonus_text}\n\n{source_info}")
    
    # –ö–æ–º–∞–Ω–¥–∞ /anekdot –∑ —Ä–µ–∞–ª—å–Ω–∏–º –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –±–∞–ª—ñ–≤
    @dp.message(Command("anekdot"))
    async def anekdot_handler(message: Message):
        user = message.from_user
        
        try:
            from database import get_random_approved_content, update_user_points
            
            # –û—Ç—Ä–∏–º—É—î–º–æ –∞–Ω–µ–∫–¥–æ—Ç –∑ –ë–î
            content = await get_random_approved_content(content_type="anekdot")
            
            if content and hasattr(content, 'text'):
                anekdot_text = content.text
                source_info = "üíæ <i>–ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö</i>"
            else:
                # Fallback –∞–Ω–µ–∫–¥–æ—Ç–∏
                fallback_anekdots = [
                    "üá∫üá¶ <b>–¢—Ä–∏ –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏</b>\n\n–£–∫—Ä–∞—ó–Ω–µ—Ü—å, —Ä–æ—Å—ñ—è–Ω–∏–Ω —Ç–∞ –±—ñ–ª–æ—Ä—É—Å —Å–ø–µ—Ä–µ—á–∞—é—Ç—å—Å—è, —Ö—Ç–æ –∫—Ä–∞—â–µ –ø—Ä–æ–≥—Ä–∞–º—É—î.\n–£–∫—Ä–∞—ó–Ω–µ—Ü—å –Ω–∞–ø–∏—Å–∞–≤ –∫—Ä–∞—Å–∏–≤–∏–π –∫–æ–¥.\n–ë—ñ–ª–æ—Ä—É—Å –Ω–∞–ø–∏—Å–∞–≤ —à–≤–∏–¥–∫–∏–π –∫–æ–¥.\n–†–æ—Å—ñ—è–Ω–∏–Ω —Å–∫–æ–ø—ñ—é–≤–∞–≤ –æ–±–∏–¥–≤–∞ —ñ —Å–∫–∞–∑–∞–≤ —â–æ —Å–∞–º –ø—Ä–∏–¥—É–º–∞–≤.",
                    "üòÇ <b>–ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç —É –ª—ñ–∫–∞—Ä—è</b>\n\n–ü—Ä–∏—Ö–æ–¥–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç –¥–æ –ª—ñ–∫–∞—Ä—è:\n- –î–æ–∫—Ç–æ—Ä, —É –º–µ–Ω–µ –±–æ–ª–∏—Ç—å —Å–ø–∏–Ω–∞!\n- –ê —Ç–∏ –±–∞–≥–∞—Ç–æ —Å–∏–¥–∏—à –∑–∞ –∫–æ–º–ø'—é—Ç–µ—Ä–æ–º?\n- –¢–∞ –Ω—ñ, —Ç—ñ–ª—å–∫–∏ 18 –≥–æ–¥–∏–Ω –Ω–∞ –¥–µ–Ω—å!\n- –¶–µ –∂ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∞!",
                    "ü§£ <b>–ü—Ä–∏—Ä–æ–¥–∞ —Ç–∞ –±–∞–≥–∏</b>\n\n–ß–æ–º—É –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏ –Ω–µ –ª—é–±–ª—è—Ç—å –ø—Ä–∏—Ä–æ–¥—É?\n–ë–æ –≤–æ–Ω–∞ –º–∞—î –∑–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –±–∞–≥—ñ–≤ —ñ –Ω–µ–º–∞—î –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó!"
                ]
                import random
                anekdot_text = random.choice(fallback_anekdots)
                source_info = "üîÑ <i>Fallback</i>"
            
            # –ù–∞—Ä–∞—Ö–æ–≤—É—î–º–æ –±–∞–ª–∏
            points_added = await update_user_points(user.id, 2)
            if points_added:
                bonus_text = "\n\nüî• <b>+2 –±–∞–ª–∏ –∑–∞ –ø–µ—Ä–µ–≥–ª—è–¥!</b>"
            else:
                bonus_text = "\n\nüî• <i>–ë–∞–ª–∏ –±—É–¥—É—Ç—å –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω—ñ –ø—ñ—Å–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é</i>"
                
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ë–î –ø–æ–º–∏–ª–∫–∞ –≤ /anekdot: {e}")
            anekdot_text = "üòÇ <b>–ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç —É –ª—ñ–∫–∞—Ä—è</b>\n\n–ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç: '–ë–æ–ª–∏—Ç—å —Å–ø–∏–Ω–∞!'\n–õ—ñ–∫–∞—Ä: '–ë–∞–≥–∞—Ç–æ —Å–∏–¥–∏—à?'\n–ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç: '–¢—ñ–ª—å–∫–∏ 18 –≥–æ–¥–∏–Ω!'\n–õ—ñ–∫–∞—Ä: '–ù–æ—Ä–º–∞–ª—å–Ω–æ!'"
            bonus_text = "\n\n‚ö†Ô∏è <i>–¢–∏–º—á–∞—Å–æ–≤–∞ –ø–æ–º–∏–ª–∫–∞ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –±–∞–ª—ñ–≤</i>"
            source_info = "üîÑ <i>Fallback</i>"
        
        await message.answer(f"üé≠ <b>–û—Å—å –≤–∞—à –∞–Ω–µ–∫–¥–æ—Ç:</b>\n\n{anekdot_text}{bonus_text}\n\n{source_info}")
    
    # –ö–æ–º–∞–Ω–¥–∞ /submit –∑ —Ä–µ–∞–ª—å–Ω–∏–º –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º –≤ –ë–î
    @dp.message(Command("submit"))
    async def submit_handler(message: Message):
        try:
            from database import add_content_for_moderation
            
            await message.answer(
                "üìù <b>–ü–û–î–ê–ß–ê –í–õ–ê–°–ù–û–ì–û –ö–û–ù–¢–ï–ù–¢–£</b>\n\n"
                "‚úÖ <b>–°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞!</b> –ù–∞–¥—ñ—à–ª—ñ—Ç—å —Å–≤—ñ–π –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞—Å—Ç—É–ø–Ω–∏–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º.\n\n"
                "üìã <b>–©–æ –º–æ–∂–Ω–∞ –ø–æ–¥–∞–≤–∞—Ç–∏:</b>\n"
                "‚Ä¢ üòÇ –ñ–∞—Ä—Ç–∏ —Ç–∞ –∞–Ω–µ–∫–¥–æ—Ç–∏\n"
                "‚Ä¢ üñºÔ∏è –ú–µ–º–∏ –∑ –ø—ñ–¥–ø–∏—Å–∞–º–∏\n"
                "‚Ä¢ üìú –¶—ñ–∫–∞–≤—ñ —ñ—Å—Ç–æ—Ä—ñ—ó\n\n"
                "üéØ <b>–í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞:</b>\n"
                "‚Ä¢ +10 –±–∞–ª—ñ–≤ –∑–∞ –ø–æ–¥–∞—á—É\n"
                "‚Ä¢ +20 –±–∞–ª—ñ–≤ –∑–∞ —Å—Ö–≤–∞–ª–µ–Ω–Ω—è\n\n"
                "üõ°Ô∏è <b>–ú–æ–¥–µ—Ä–∞—Ü—ñ—è:</b> –í—Å—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç—å –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n\n"
                "üíæ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –≥–æ—Ç–æ–≤–∞ –¥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è ‚úÖ"
            )
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ë–î –ø–æ–º–∏–ª–∫–∞ –≤ /submit: {e}")
            await message.answer(
                "üìù <b>–ü–û–î–ê–ß–ê –ö–û–ù–¢–ï–ù–¢–£</b>\n\n"
                "‚ö†Ô∏è –¢–∏–º—á–∞—Å–æ–≤–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å —Å–∏—Å—Ç–µ–º–∏ –ø–æ–¥–∞—á—ñ.\n"
                "–°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
            )
    
    # –ö–æ–º–∞–Ω–¥–∞ /admin –∑ —Ä–µ–∞–ª—å–Ω–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ—é –∑ –ë–î
    @dp.message(Command("admin"))
    async def admin_handler(message: Message):
        try:
            import os
            admin_id = int(os.getenv("ADMIN_ID", 603047391))
            
            if message.from_user.id != admin_id:
                await message.answer("‚ùå <b>–î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ</b>\n\n–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
                return
            
            # ‚úÖ –†–ï–ê–õ–¨–ù–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ó –ë–î
            try:
                from database import get_basic_stats
                
                stats = await get_basic_stats()
                
                if stats and not stats.get('error'):
                    total_users = stats.get('total_users', '–ù/–î')
                    active_users = stats.get('active_users', '–ù/–î')
                    total_content = stats.get('total_content', '–ù/–î')
                    pending_content = stats.get('pending_content', '–ù/–î')
                    active_duels = stats.get('active_duels', '–ù/–î')
                    
                    stats_text = (
                        f"üìä <b>–†–ï–ê–õ–¨–ù–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ó –ë–î:</b>\n"
                        f"üë• –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: <b>{total_users}</b>\n"
                        f"üî• –ê–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞ –¥–æ–±—É: <b>{active_users}</b>\n"
                        f"üìù –ö–æ–Ω—Ç–µ–Ω—Ç—É –≤—Å—å–æ–≥–æ: <b>{total_content}</b>\n"
                        f"‚è≥ –ù–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—ó: <b>{pending_content}</b>\n"
                        f"‚öîÔ∏è –ê–∫—Ç–∏–≤–Ω–∏—Ö –¥—É–µ–ª–µ–π: <b>{active_duels}</b>"
                    )
                else:
                    stats_text = "üìä <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê:</b>\n‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ –ë–î"
                    
            except Exception as e:
                logger.warning(f"‚ö†Ô∏è –ë–î –ø–æ–º–∏–ª–∫–∞ –≤ /admin stats: {e}")
                stats_text = "üìä <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê:</b>\nüîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è..."
            
            await message.answer(
                f"üëë <b>–ü–ê–ù–ï–õ–¨ –ê–î–ú–Ü–ù–Ü–°–¢–†–ê–¢–û–†–ê</b>\n\n"
                f"üõ†Ô∏è <b>–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º–∏:</b>\n"
                f"‚úÖ –ë–æ—Ç: –ê–∫—Ç–∏–≤–Ω–∏–π\n"
                f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö: –ü—ñ–¥–∫–ª—é—á–µ–Ω–∞\n"
                f"‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è: –ü—Ä–∞—Ü—é—î\n\n"
                f"{stats_text}\n\n"
                f"üîß <b>–î–æ—Å—Ç—É–ø–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:</b>\n"
                f"‚Ä¢ /stats - –¥–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
                f"‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ü—ñ—è –∫–æ–Ω—Ç–µ–Ω—Ç—É (–≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ)\n"
                f"‚Ä¢ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏ (–≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ)\n\n"
                f"üíæ <b>–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –∞–∫—Ç–∏–≤–Ω–∞</b> ‚úÖ"
            )
            
        except Exception as e:
            await message.answer(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–∞–Ω–µ–ª—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
    
    # –ö–æ–º–∞–Ω–¥–∞ /help
    @dp.message(Command("help"))
    async def help_handler(message: Message):
        await message.answer(
            "‚ùì <b>–ü–û–í–ù–ê –î–û–í–Ü–î–ö–ê –ü–û –ë–û–¢–£</b>\n\n"
            "üéÆ <b>–ì–µ–π–º—ñ—Ñ—ñ–∫–∞—Ü—ñ—è:</b>\n"
            "‚Ä¢ –û—Ç—Ä–∏–º—É–π—Ç–µ –±–∞–ª–∏ –∑–∞ –∫–æ–∂–Ω—É –¥—ñ—é\n"
            "‚Ä¢ –ü—ñ–¥–≤–∏—â—É–π—Ç–µ —Å–≤—ñ–π —Ä–∞–Ω–≥ (8 —Ä—ñ–≤–Ω—ñ–≤)\n"
            "‚Ä¢ –ë–µ—Ä—ñ—Ç—å —É—á–∞—Å—Ç—å –≤ –¥—É–µ–ª—è—Ö –∂–∞—Ä—Ç—ñ–≤\n\n"
            "üìù <b>–ö–æ–Ω—Ç–µ–Ω—Ç (+–±–∞–ª–∏):</b>\n"
            "‚Ä¢ /meme - –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –º–µ–º (+2)\n"
            "‚Ä¢ /anekdot - —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –∞–Ω–µ–∫–¥–æ—Ç (+2)\n"
            "‚Ä¢ /submit - –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Å–≤—ñ–π –∫–æ–Ω—Ç–µ–Ω—Ç (+10-30)\n\n"
            "üë§ <b>–ü—Ä–æ—Ñ—ñ–ª—å —Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥:</b>\n"
            "‚Ä¢ /profile - –¥–µ—Ç–∞–ª—å–Ω–∏–π –ø—Ä–æ—Ñ—ñ–ª—å –∑ –ë–î\n"
            "‚Ä¢ /top - —Ä–µ–∞–ª—å–Ω–∞ —Ç–∞–±–ª–∏—Ü—è –ª—ñ–¥–µ—Ä—ñ–≤\n\n"
            "‚öîÔ∏è <b>–î—É–µ–ª—ñ (—Å–∫–æ—Ä–æ):</b>\n"
            "‚Ä¢ /duel - –¥—É–µ–ª—å –∂–∞—Ä—Ç—ñ–≤ (+15 –∑–∞ –ø–µ—Ä–µ–º–æ–≥—É)\n\n"
            "üõ°Ô∏è <b>–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä—É–≤–∞–Ω–Ω—è:</b>\n"
            "‚Ä¢ /admin - –ø–∞–Ω–µ–ª—å –∑ —Ä–µ–∞–ª—å–Ω–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ—é\n\n"
            "üíæ <b>–í—Å—ñ –¥–∞–Ω—ñ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö PostgreSQL</b> ‚úÖ"
        )
    
    # –û–±—Ä–æ–±–∫–∞ –≤—Å—ñ—Ö —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    @dp.message(F.text & ~F.text.startswith('/'))
    async def text_handler(message: Message):
        await message.answer(
            "ü§ñ –ü—Ä–∏–≤—ñ—Ç! –Ø —Ä–æ–∑—É–º—ñ—é –∫–æ–º–∞–Ω–¥–∏.\n\n"
            "üìã <b>–ü–æ–ø—É–ª—è—Ä–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:</b>\n"
            "/start - –∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å\n"
            "/meme - –æ—Ç—Ä–∏–º–∞—Ç–∏ –º–µ–º (+2 –±–∞–ª–∏)\n"
            "/anekdot - –æ—Ç—Ä–∏–º–∞—Ç–∏ –∞–Ω–µ–∫–¥–æ—Ç (+2 –±–∞–ª–∏)\n"
            "/profile - –≤–∞—à –ø—Ä–æ—Ñ—ñ–ª—å –∑ –ë–î\n"
            "/top - —Ç–∞–±–ª–∏—Ü—è –ª—ñ–¥–µ—Ä—ñ–≤\n"
            "/help - –ø–æ–≤–Ω–∞ –¥–æ–≤—ñ–¥–∫–∞"
        )
    
    # Error handler
    @dp.error()
    async def error_handler(event, exception):
        logger.error(f"‚ùå Unhandled error: {exception}")
        try:
            if hasattr(event, 'message') and event.message:
                await event.message.answer(
                    "üòÖ <b>–¢–µ—Ö–Ω—ñ—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞!</b>\n\n"
                    "–°–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
                )
        except:
            pass
    
    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —ñ–Ω—à–∏—Ö handlers (placeholder)
    @dp.callback_query()
    async def callback_handler(callback: CallbackQuery):
        await callback.answer("üîß –§—É–Ω–∫—Ü—ñ—è –≤ –∞–∫—Ç–∏–≤–Ω—ñ–π —Ä–æ–∑—Ä–æ–±—Ü—ñ!")
    
    @dp.message()
    async def other_handler(message: Message):
        await message.answer(
            "ü§ñ –ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥."
        )
    
    logger.info("üî• –ü–æ–≤–Ω–æ—Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ handlers –∑ –ë–î –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")

# –ï–∫—Å–ø–æ—Ä—Ç
__all__ = ['register_all_handlers']

logger.info("üî• Handlers –º–æ–¥—É–ª—å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ –ü–û–í–ù–ò–ú –§–£–ù–ö–¶–Ü–û–ù–ê–õ–û–ú –ë–î")
