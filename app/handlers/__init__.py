#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üéÆ –í–ò–ü–†–ê–í–õ–ï–ù–ê –†–ï–Ñ–°–¢–†–ê–¶–Ü–Ø –í–°–Ü–• –•–ï–ù–î–õ–ï–†–Ü–í üéÆ

–í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø:
‚úÖ –î–æ–¥–∞–Ω–æ –≤—Å—ñ typing —ñ–º–ø–æ—Ä—Ç–∏ (List, Dict, Any, Optional)
‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ ImportError –¥–ª—è –≤—ñ–¥—Å—É—Ç–Ω—ñ—Ö –º–æ–¥—É–ª—ñ–≤
‚úÖ Fallback —Ö–µ–Ω–¥–ª–µ—Ä–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π
‚úÖ –î–µ—Ç–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤
"""

import logging
import random
from typing import Optional, List, Dict, Any, Union, Callable
from aiogram import Dispatcher
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram import F

logger = logging.getLogger(__name__)

def register_handlers(dp: Dispatcher) -> bool:
    """
    –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –≤—Å—ñ—Ö —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤ –±–æ—Ç–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É
    
    Args:
        dp: Dispatcher –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤
    
    Returns:
        bool: True —è–∫—â–æ —Ö–µ–Ω–¥–ª–µ—Ä–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ
    """
    
    logger.info("üéÆ –ü–æ—á–∏–Ω–∞—é —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤...")
    
    handlers_status: Dict[str, bool] = {}
    total_handlers = 0
    registered_handlers = 0
    
    # ===== 1. –û–°–ù–û–í–ù–Ü –ö–û–ú–ê–ù–î–ò =====
    try:
        from .basic_commands import register_basic_handlers
        register_basic_handlers(dp)
        handlers_status['basic_commands'] = True
        registered_handlers += 1
        logger.info("‚úÖ Basic commands –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")
    except ImportError as e:
        handlers_status['basic_commands'] = False
        logger.warning(f"‚ö†Ô∏è Basic commands –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ: {e}")
        # –†–µ—î—Å—Ç—Ä—É—î–º–æ fallback –æ—Å–Ω–æ–≤–Ω—ñ –∫–æ–º–∞–Ω–¥–∏
        _register_fallback_basic_handlers(dp)
        registered_handlers += 1
    except Exception as e:
        handlers_status['basic_commands'] = False
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ basic commands: {e}")
        _register_fallback_basic_handlers(dp)
        registered_handlers += 1
    
    total_handlers += 1
    
    # ===== 2. –ê–î–ú–Ü–ù-–ü–ê–ù–ï–õ–¨ =====
    try:
        from .admin_panel_handlers import register_admin_handlers
        register_admin_handlers(dp)
        handlers_status['admin_panel'] = True
        registered_handlers += 1
        logger.info("‚úÖ Admin panel –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")
    except ImportError as e:
        handlers_status['admin_panel'] = False
        logger.warning(f"‚ö†Ô∏è Admin panel –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞: {e}")
        # –†–µ—î—Å—Ç—Ä—É—î–º–æ fallback –∞–¥–º—ñ–Ω –∫–æ–º–∞–Ω–¥–∏
        _register_fallback_admin_handlers(dp)
        registered_handlers += 1
    except Exception as e:
        handlers_status['admin_panel'] = False
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ admin panel: {e}")
    
    total_handlers += 1
    
    # ===== 3. –ö–û–ù–¢–ï–ù–¢ (–ú–ï–ú–ò/–ñ–ê–†–¢–ò) =====
    try:
        from .content_handlers import register_content_handlers
        register_content_handlers(dp)
        handlers_status['content'] = True
        registered_handlers += 1
        logger.info("‚úÖ Content handlers –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")
    except ImportError as e:
        handlers_status['content'] = False
        logger.warning(f"‚ö†Ô∏è Content handlers –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ: {e}")
        # –†–µ—î—Å—Ç—Ä—É—î–º–æ fallback –∫–æ–Ω—Ç–µ–Ω—Ç –∫–æ–º–∞–Ω–¥–∏
        _register_fallback_content_handlers(dp)
        registered_handlers += 1
    except Exception as e:
        handlers_status['content'] = False
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ content handlers: {e}")
    
    total_handlers += 1
    
    # ===== 4. –î–£–ï–õ–Ü =====
    try:
        from .duel_handlers import register_duel_handlers
        register_duel_handlers(dp)
        handlers_status['duels'] = True
        registered_handlers += 1
        logger.info("‚úÖ Duel handlers –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")
    except ImportError as e:
        handlers_status['duels'] = False
        logger.warning(f"‚ö†Ô∏è Duel handlers –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ: {e}")
        # –†–µ—î—Å—Ç—Ä—É—î–º–æ fallback –¥—É–µ–ª—å –∫–æ–º–∞–Ω–¥–∏
        _register_fallback_duel_handlers(dp)
        registered_handlers += 1
    except Exception as e:
        handlers_status['duels'] = False
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ duel handlers: {e}")
    
    total_handlers += 1
    
    # ===== 5. –ú–û–î–ï–†–ê–¶–Ü–Ø =====
    try:
        from .moderation_handlers import register_moderation_handlers
        register_moderation_handlers(dp)
        handlers_status['moderation'] = True
        registered_handlers += 1
        logger.info("‚úÖ Moderation handlers –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")
    except ImportError as e:
        handlers_status['moderation'] = False
        logger.warning(f"‚ö†Ô∏è Moderation handlers –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ: {e}")
        # –†–µ—î—Å—Ç—Ä—É—î–º–æ fallback –º–æ–¥–µ—Ä–∞—Ü—ñ—è –∫–æ–º–∞–Ω–¥–∏
        _register_fallback_moderation_handlers(dp)
        registered_handlers += 1
    except Exception as e:
        handlers_status['moderation'] = False
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ moderation handlers: {e}")
    
    total_handlers += 1
    
    # ===== 6. –ì–ï–ô–ú–Ü–§–Ü–ö–ê–¶–Ü–Ø =====
    try:
        from .gamification_handlers import register_gamification_handlers
        register_gamification_handlers(dp)
        handlers_status['gamification'] = True
        registered_handlers += 1
        logger.info("‚úÖ Gamification handlers –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")
    except ImportError as e:
        handlers_status['gamification'] = False
        logger.warning(f"‚ö†Ô∏è Gamification handlers –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ: {e}")
        # –†–µ—î—Å—Ç—Ä—É—î–º–æ fallback –≥–µ–π–º—ñ—Ñ—ñ–∫–∞—Ü—ñ—è –∫–æ–º–∞–Ω–¥–∏
        _register_fallback_gamification_handlers(dp)
        registered_handlers += 1
    except Exception as e:
        handlers_status['gamification'] = False
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ gamification handlers: {e}")
    
    total_handlers += 1
    
    # ===== 7. –£–ù–Ü–í–ï–†–°–ê–õ–¨–ù–Ü CALLBACK'–ò =====
    _register_universal_callbacks(dp)
    
    # ===== –ü–Ü–î–°–£–ú–û–ö =====
    logger.info(f"üìä –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {registered_handlers}/{total_handlers} –º–æ–¥—É–ª—ñ–≤")
    
    success_rate = (registered_handlers / total_handlers) * 100
    if success_rate >= 90:
        logger.info("üéâ –í—Å—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ!")
    elif success_rate >= 70:
        logger.info("‚úÖ –ë—ñ–ª—å—à—ñ—Å—Ç—å —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")
    else:
        logger.warning("‚ö†Ô∏è –î–µ—è–∫—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ, –∞–ª–µ –±–æ—Ç –ø—Ä–∞—Ü–µ–∑–¥–∞—Ç–Ω–∏–π")
    
    return True

# ===== FALLBACK –§–£–ù–ö–¶–Ü–á =====

def _register_fallback_basic_handlers(dp: Dispatcher):
    """Fallback –æ—Å–Ω–æ–≤–Ω—ñ –∫–æ–º–∞–Ω–¥–∏"""
    logger.info("üÜò –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è fallback basic handlers...")
    
    @dp.message(Command("start"))
    async def fallback_start(message: Message):
        await message.answer(
            "üß†üòÇüî• <b>–í—ñ—Ç–∞—é –≤ —É–∫—Ä–∞—ó–Ω–æ–º–æ–≤–Ω–æ–º—É –±–æ—Ç—ñ!</b>\n\n"
            "üéØ <b>–©–æ —è –≤–º—ñ—é:</b>\n"
            "‚Ä¢ üòÇ –ì–µ–Ω–µ—Ä—É—é –º–µ–º–∏ —Ç–∞ –∞–Ω–µ–∫–¥–æ—Ç–∏\n"
            "‚Ä¢ ‚öîÔ∏è –û—Ä–≥–∞–Ω—ñ–∑–æ–≤—É—é –¥—É–µ–ª—ñ –∂–∞—Ä—Ç—ñ–≤\n"
            "‚Ä¢ üèÜ –í–µ–¥—É —Ä–µ–π—Ç–∏–Ω–≥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤\n"
            "‚Ä¢ üéÆ –ì–µ–π–º—ñ—Ñ—ñ–∫–∞—Ü—ñ—è –∑ –±–∞–ª–∞–º–∏\n\n"
            "üìã <b>–ö–æ–º–∞–Ω–¥–∏:</b>\n"
            "/meme - –æ—Ç—Ä–∏–º–∞—Ç–∏ –º–µ–º\n"
            "/anekdot - –æ—Ç—Ä–∏–º–∞—Ç–∏ –∞–Ω–µ–∫–¥–æ—Ç\n"
            "/profile - –º—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å\n"
            "/top - —Ä–µ–π—Ç–∏–Ω–≥\n"
            "/duel - –ø–æ—á–∞—Ç–∏ –¥—É–µ–ª—å\n"
            "/help - –¥–µ—Ç–∞–ª—å–Ω–∞ –¥–æ–≤—ñ–¥–∫–∞\n\n"
            "üîß <i>–ü—Ä–∞—Ü—é—î –≤ –±–∞–∑–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ</i>"
        )
    
    @dp.message(Command("help"))
    async def fallback_help(message: Message):
        await message.answer(
            "üìö <b>–î–ï–¢–ê–õ–¨–ù–ê –î–û–í–Ü–î–ö–ê</b>\n\n"
            "üéØ <b>–û–°–ù–û–í–ù–Ü –§–£–ù–ö–¶–Ü–á:</b>\n\n"
            "üòÇ <b>–ö–æ–Ω—Ç–µ–Ω—Ç:</b>\n"
            "‚Ä¢ /meme - –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –º–µ–º\n"
            "‚Ä¢ /anekdot - –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –∞–Ω–µ–∫–¥–æ—Ç\n"
            "‚Ä¢ /submit - –ø–æ–¥–∞—Ç–∏ —Å–≤—ñ–π –∂–∞—Ä—Ç\n\n"
            "‚öîÔ∏è <b>–î—É–µ–ª—ñ:</b>\n"
            "‚Ä¢ /duel - –ø–æ—á–∞—Ç–∏ –¥—É–µ–ª—å –∂–∞—Ä—Ç—ñ–≤\n"
            "‚Ä¢ –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è –∑–∞ –∫—Ä–∞—â–∏–π –∂–∞—Ä—Ç\n"
            "‚Ä¢ –û—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª—ñ–≤ –∑–∞ –ø–µ—Ä–µ–º–æ–≥–∏\n\n"
            "üèÜ <b>–†–µ–π—Ç–∏–Ω–≥:</b>\n"
            "‚Ä¢ /profile - –≤–∞—à –ø—Ä–æ—Ñ—ñ–ª—å —Ç–∞ –±–∞–ª–∏\n"
            "‚Ä¢ /top - —Ç–æ–ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤\n"
            "‚Ä¢ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–Ω–≥—ñ–≤ —Ç–∞ –¥–æ—Å—è–≥–Ω–µ–Ω—å\n\n"
            "üëë <b>–î–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤:</b>\n"
            "‚Ä¢ /admin - –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å\n"
            "‚Ä¢ /stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞\n\n"
            "üí° <i>–î–µ—è–∫—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –º–æ–∂—É—Ç—å –±—É—Ç–∏ –æ–±–º–µ–∂–µ–Ω—ñ –≤ –±–∞–∑–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ</i>"
        )
    
    logger.info("‚úÖ Fallback basic handlers –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")

def _register_fallback_content_handlers(dp: Dispatcher):
    """Fallback –∫–æ–Ω—Ç–µ–Ω—Ç –∫–æ–º–∞–Ω–¥–∏"""
    logger.info("üÜò –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è fallback content handlers...")
    
    FALLBACK_JOKES = [
        "–ß–æ–º—É –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏ –ø–ª—É—Ç–∞—é—Ç—å –•–µ–ª–ª–æ—É—ó–Ω —ñ –†—ñ–∑–¥–≤–æ? –¢–æ–º—É —â–æ 31 OCT = 25 DEC!",
        "–°–∫—ñ–ª—å–∫–∏ –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç—ñ–≤ –ø–æ—Ç—Ä—ñ–±–Ω–æ —â–æ–± –∑–∞–∫—Ä—É—Ç–∏—Ç–∏ –ª–∞–º–ø–æ—á–∫—É? –ñ–æ–¥–Ω–æ–≥–æ. –¶–µ –∞–ø–∞—Ä–∞—Ç–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞!",
        "–ß–æ–º—É –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏ –Ω–æ—Å—è—Ç—å –æ–∫—É–ª—è—Ä–∏? –¢–æ–º—É —â–æ –Ω–µ –º–æ–∂—É—Ç—å C#!",
        "–©–æ —Å–∫–∞–∑–∞–≤ 0 –¥–æ 8? - –ì–∞—Ä–Ω–∏–π –ø–æ—è—Å!",
        "–ù–∞–π–∫—Ä–∞—â–∏–π —Å–ø–æ—Å—ñ–± –ø—Ä–∏—Å–∫–æ—Ä–∏—Ç–∏ –∫–æ–º–ø'—é—Ç–µ—Ä - –∫–∏–Ω—É—Ç–∏ –π–æ–≥–æ –∑ –≤—ñ–∫–Ω–∞!",
        "–ß–æ–º—É Java –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏ –Ω–æ—Å—è—Ç—å –æ–∫—É–ª—è—Ä–∏? –¢–æ–º—É —â–æ –≤–æ–Ω–∏ –Ω–µ –º–æ–∂—É—Ç—å C!",
        "–Ø–∫–∏–π –Ω–∞–π–∫—Ä–∞—â–∏–π –æ–±'—î–∫—Ç –≤ Java? –ü–µ—Ä–µ—Ä–≤–∞ –Ω–∞ –∫–∞–≤—É!",
        "–Ø —Ä–æ–∑–ø–æ–≤—ñ–≤ –¥—Ä—É–∂–∏–Ω—ñ –∂–∞—Ä—Ç –ø—Ä–æ UDP, –∞–ª–µ –Ω–µ –∑–Ω–∞—é, —á–∏ –¥—ñ–π—à–æ–≤ –≤—ñ–Ω –¥–æ –Ω–µ—ó.",
        "–£ —á–æ–º—É —Ä—ñ–∑–Ω–∏—Ü—è –º—ñ–∂ Java —Ç–∞ JavaScript? –¢–∞–∫–∞ –∂ —è–∫ –º—ñ–∂ –º–æ–ª–æ—Ç–∫–æ–º —Ç–∞ –º–æ–ª–æ—Ç–∫–æ–≤–æ—é –∞–∫—É–ª–æ—é!",
        "–ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç - —Ü–µ –º–∞—à–∏–Ω–∞ –¥–ª—è –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞–≤–∏ –Ω–∞ –∫–æ–¥!"
    ]
    
    @dp.message(Command("meme"))
    async def fallback_meme(message: Message):
        joke = random.choice(FALLBACK_JOKES)
        await message.answer(
            f"üî• <b>–ú–µ–º –¥–Ω—è:</b>\n\n"
            f"<i>{joke}</i>\n\n"
            f"üòÇ –°–ø–æ–¥—ñ–≤–∞—é—Å—è, –≤–∞–º —Å–ø–æ–¥–æ–±–∞–ª–æ—Å—å!\n"
            f"üí° <i>–¶–µ fallback –∫–æ–Ω—Ç–µ–Ω—Ç. –î–ª—è –±—ñ–ª—å—à–æ–≥–æ —Ä–æ–∑–º–∞—ó—Ç—Ç—è –Ω–∞–ª–∞—à—Ç—É–π—Ç–µ –ë–î</i>"
        )
    
    @dp.message(Command("anekdot"))
    async def fallback_anekdot(message: Message):
        joke = random.choice(FALLBACK_JOKES)
        await message.answer(
            f"üòÇ <b>–ê–Ω–µ–∫–¥–æ—Ç:</b>\n\n"
            f"<i>{joke}</i>\n\n"
            f"üé≠ –°–º—ñ—è–ª–∏—Å—å? –ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è –∑ –¥—Ä—É–∑—è–º–∏!\n"
            f"üí° <i>–¶–µ fallback –∫–æ–Ω—Ç–µ–Ω—Ç. –î–æ–¥–∞–π—Ç–µ –≤–ª–∞—Å–Ω—ñ –∞–Ω–µ–∫–¥–æ—Ç–∏ —á–µ—Ä–µ–∑ –ë–î</i>"
        )
    
    @dp.message(Command("submit"))
    async def fallback_submit(message: Message):
        await message.answer(
            "üìù <b>–ü–æ–¥–∞—á–∞ –∫–æ–Ω—Ç–µ–Ω—Ç—É</b>\n\n"
            "üîß –§—É–Ω–∫—Ü—ñ—è –ø–æ–¥–∞—á—ñ –∫–æ–Ω—Ç–µ–Ω—Ç—É –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–∞–∑–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ.\n"
            "–î–ª—è –ø–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É –ø–æ—Ç—Ä—ñ–±–Ω–∞:\n"
            "‚Ä¢ –ù–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–∏—Ö\n"
            "‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—ó\n"
            "‚Ä¢ –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å\n\n"
            "üí° <i>–ó–∞—Ä–∞–∑ –≤–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Å–≤—ñ–π –∂–∞—Ä—Ç –±–æ—Ç—É!</i>\n\n"
            "üì® –ù–∞–ø–∏—à—ñ—Ç—å —Å–≤—ñ–π –∂–∞—Ä—Ç —É –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ:"
        )
    
    logger.info("‚úÖ Fallback content handlers –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")

def _register_fallback_admin_handlers(dp: Dispatcher):
    """Fallback –∞–¥–º—ñ–Ω –∫–æ–º–∞–Ω–¥–∏"""
    logger.info("üÜò –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è fallback admin handlers...")
    
    @dp.message(Command("admin"))
    async def fallback_admin(message: Message):
        admin_id = int(os.getenv("ADMIN_ID", 0))
        if message.from_user.id != admin_id:
            await message.answer("‚ùå –¢—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤")
            return
        
        await message.answer(
            "üëë <b>–ê–î–ú–Ü–ù –ü–ê–ù–ï–õ–¨</b>\n\n"
            "üîß <b>–ë–∞–∑–æ–≤–∏–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–Ω–∏–π</b>\n\n"
            "üìä <b>–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:</b>\n"
            "‚Ä¢ /stats - –±–∞–∑–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
            "‚Ä¢ /status - —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞\n\n"
            "‚öôÔ∏è <b>–î–ª—è –ø–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É –ø–æ—Ç—Ä—ñ–±–Ω–æ:</b>\n"
            "‚Ä¢ –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –±–∞–∑—É –¥–∞–Ω–∏—Ö\n"
            "‚Ä¢ –ê–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –≤—Å—ñ handlers\n"
            "‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—é\n\n"
            "üí° <i>–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏</i>"
        )
    
    @dp.message(Command("stats"))
    async def fallback_stats(message: Message):
        admin_id = int(os.getenv("ADMIN_ID", 0))
        if message.from_user.id != admin_id:
            await message.answer("‚ùå –¢—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤")
            return
        
        await message.answer(
            "üìä <b>–ë–ê–ó–û–í–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê</b>\n\n"
            "ü§ñ <b>–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:</b> Fallback —Ä–µ–∂–∏–º\n"
            "üíæ <b>–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö:</b> –ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞\n"
            "üéÆ <b>Handlers:</b> Fallback –≤–µ—Ä—Å—ñ—ó\n"
            "ü§ñ <b>–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è:</b> –ù–µ–∞–∫—Ç–∏–≤–Ω–∞\n\n"
            "‚ö° <b>–î–ª—è –ø–æ–≤–Ω–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ:</b>\n"
            "‚Ä¢ –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ PostgreSQL\n"
            "‚Ä¢ –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –≤—Å—ñ –º–æ–¥—É–ª—ñ\n"
            "‚Ä¢ –ê–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –ø–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫"
        )
    
    logger.info("‚úÖ Fallback admin handlers –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")

def _register_fallback_duel_handlers(dp: Dispatcher):
    """Fallback –¥—É–µ–ª—å –∫–æ–º–∞–Ω–¥–∏"""
    logger.info("üÜò –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è fallback duel handlers...")
    
    @dp.message(Command("duel"))
    async def fallback_duel(message: Message):
        await message.answer(
            "‚öîÔ∏è <b>–î–£–ï–õ–Ü –ñ–ê–†–¢–Ü–í</b>\n\n"
            "üîß <i>–§—É–Ω–∫—Ü—ñ—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–∞–∑–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ</i>\n\n"
            "üéØ <b>–©–æ —Ç–∞–∫–µ –¥—É–µ–ª—ñ:</b>\n"
            "‚Ä¢ –ó–º–∞–≥–∞–Ω–Ω—è –º—ñ–∂ –¥–≤–æ–º–∞ –∂–∞—Ä—Ç–∞–º–∏\n"
            "‚Ä¢ –ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è —ñ–Ω—à–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤\n"
            "‚Ä¢ –ë–∞–ª–∏ –∑–∞ –ø–µ—Ä–µ–º–æ–≥–∏ —Ç–∞ —É—á–∞—Å—Ç—å\n"
            "‚Ä¢ –†–µ–π—Ç–∏–Ω–≥ –Ω–∞–π–∫—Ä–∞—â–∏—Ö –∂–∞—Ä—Ç—É–Ω—ñ–≤\n\n"
            "‚öôÔ∏è <b>–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –ø–æ—Ç—Ä—ñ–±–Ω–æ:</b>\n"
            "‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥—É–µ–ª–µ–π\n"
            "‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è\n"
            "‚Ä¢ –ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫ –¥–ª—è –∞–≤—Ç–æ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è\n\n"
            "üí° <i>–ü–æ–∫–∏ —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /meme —Ç–∞ /anekdot</i>"
        )
    
    logger.info("‚úÖ Fallback duel handlers –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")

def _register_fallback_moderation_handlers(dp: Dispatcher):
    """Fallback –º–æ–¥–µ—Ä–∞—Ü—ñ—è –∫–æ–º–∞–Ω–¥–∏"""
    logger.info("üÜò –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è fallback moderation handlers...")
    
    @dp.message(Command("moderate"))
    async def fallback_moderate(message: Message):
        admin_id = int(os.getenv("ADMIN_ID", 0))
        if message.from_user.id != admin_id:
            await message.answer("‚ùå –¢—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤")
            return
        
        await message.answer(
            "üõ°Ô∏è <b>–ú–û–î–ï–†–ê–¶–Ü–Ø</b>\n\n"
            "üîß <i>–§—É–Ω–∫—Ü—ñ—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–∞–∑–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ</i>\n\n"
            "üìã <b>–©–æ –≤–∫–ª—é—á–∞—î –º–æ–¥–µ—Ä–∞—Ü—ñ—è:</b>\n"
            "‚Ä¢ –ü–µ—Ä–µ–≥–ª—è–¥ –ø–æ–¥–∞–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É\n"
            "‚Ä¢ –°—Ö–≤–∞–ª–µ–Ω–Ω—è/–≤—ñ–¥—Ö–∏–ª–µ–Ω–Ω—è –∂–∞—Ä—Ç—ñ–≤\n"
            "‚Ä¢ –í–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–µ–ø—Ä–∏–π–Ω—è—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É\n"
            "‚Ä¢ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏\n\n"
            "‚öôÔ∏è <b>–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –ø–æ—Ç—Ä—ñ–±–Ω–æ:</b>\n"
            "‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –∑ —Ç–∞–±–ª–∏—Ü–µ—é –∫–æ–Ω—Ç–µ–Ω—Ç—É\n"
            "‚Ä¢ –ß–µ—Ä–≥–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—ó\n"
            "‚Ä¢ –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n"
            "üí° <i>–ù–∞—Ä–∞–∑—ñ –º–æ–¥–µ—Ä–∞—Ü—ñ—è –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –≤—Ä—É—á–Ω—É</i>"
        )
    
    logger.info("‚úÖ Fallback moderation handlers –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")

def _register_fallback_gamification_handlers(dp: Dispatcher):
    """Fallback –≥–µ–π–º—ñ—Ñ—ñ–∫–∞—Ü—ñ—è –∫–æ–º–∞–Ω–¥–∏"""
    logger.info("üÜò –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è fallback gamification handlers...")
    
    @dp.message(Command("profile"))
    async def fallback_profile(message: Message):
        user = message.from_user
        await message.answer(
            f"üë§ <b>–ü–†–û–§–Ü–õ–¨ –ö–û–†–ò–°–¢–£–í–ê–ß–ê</b>\n\n"
            f"üÜî <b>ID:</b> {user.id}\n"
            f"üìù <b>–Ü–º'—è:</b> {user.first_name}\n"
            f"üîó <b>Username:</b> @{user.username or '–ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}\n\n"
            f"üîß <i>–ë–∞–∑–æ–≤–∏–π —Ä–µ–∂–∏–º</i>\n\n"
            f"‚öôÔ∏è <b>–î–ª—è –ø–æ–≤–Ω–æ—ó –≥–µ–π–º—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó –ø–æ—Ç—Ä—ñ–±–Ω–æ:</b>\n"
            f"‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –±–∞–ª—ñ–≤\n"
            f"‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—è–≥–Ω–µ–Ω—å\n"
            f"‚Ä¢ –†–µ–π—Ç–∏–Ω–≥–∏ —Ç–∞ —Ä–∞–Ω–≥–∏\n"
            f"‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ\n\n"
            f"üí° <i>–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –±–æ—Ç–∞ –¥–ª—è –Ω–∞–∫–æ–ø–∏—á–µ–Ω–Ω—è –±–∞–ª—ñ–≤!</i>"
        )
    
    @dp.message(Command("top"))
    async def fallback_top(message: Message):
        await message.answer(
            "üèÜ <b>–†–ï–ô–¢–ò–ù–ì –ö–û–†–ò–°–¢–£–í–ê–ß–Ü–í</b>\n\n"
            "üîß <i>–§—É–Ω–∫—Ü—ñ—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–∞–∑–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ</i>\n\n"
            "üìä <b>–©–æ –ø–æ–∫–∞–∑—É—î —Ä–µ–π—Ç–∏–Ω–≥:</b>\n"
            "‚Ä¢ –¢–æ–ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –±–∞–ª–∞–º–∏\n"
            "‚Ä¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–º–æ–≥ —É –¥—É–µ–ª—è—Ö\n"
            "‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å —Ç–∞ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è\n"
            "‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Ä—ñ–∑–Ω—ñ –ø–µ—Ä—ñ–æ–¥–∏\n\n"
            "‚öôÔ∏è <b>–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –ø–æ—Ç—Ä—ñ–±–Ω–æ:</b>\n"
            "‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –∑ —Ç–∞–±–ª–∏—Ü–µ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤\n"
            "‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É –±–∞–ª—ñ–≤\n"
            "‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó\n\n"
            "üí° <i>–ü–æ—á–Ω—ñ—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –±–æ—Ç–∞ –∑–∞—Ä–∞–∑!</i>"
        )
    
    logger.info("‚úÖ Fallback gamification handlers –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")

def _register_universal_callbacks(dp: Dispatcher):
    """–£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω—ñ callback'–∏ –¥–ª—è –Ω–µ–æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –≤–∏–ø–∞–¥–∫—ñ–≤"""
    logger.info("üîó –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è universal callbacks...")
    
    @dp.callback_query()
    async def handle_unknown_callback(callback: CallbackQuery):
        """–û–±—Ä–æ–±–∫–∞ –Ω–µ–≤—ñ–¥–æ–º–∏—Ö callback'—ñ–≤"""
        await callback.answer("‚ö†Ô∏è –¶—è —Ñ—É–Ω–∫—Ü—ñ—è —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞", show_alert=True)
        
        unknown_text = (
            "üîß <b>–§—É–Ω–∫—Ü—ñ—è –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ</b>\n\n"
            "‚ö†Ô∏è –¶—è –∫–Ω–æ–ø–∫–∞ –ø–æ–∫–∏ —â–æ –Ω–µ –ø—Ä–∞—Ü—é—î.\n"
            "–¶–µ –º–æ–∂–µ –±—É—Ç–∏ —á–µ—Ä–µ–∑:\n"
            "‚Ä¢ –ë–∞–∑–æ–≤–∏–π —Ä–µ–∂–∏–º —Ä–æ–±–æ—Ç–∏\n"
            "‚Ä¢ –í—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å –ë–î\n"
            "‚Ä¢ –ù–µ–∞–∫—Ç–∏–≤–Ω—ñ –º–æ–¥—É–ª—ñ\n\n"
            "üí° <i>–°–ø—Ä–æ–±—É–π—Ç–µ –æ—Å–Ω–æ–≤–Ω—ñ –∫–æ–º–∞–Ω–¥–∏: /help</i>"
        )
        
        await callback.message.answer(unknown_text)
    
    logger.info("‚úÖ Universal callback handlers –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")

# ===== –î–Ü–ê–ì–ù–û–°–¢–ò–ß–ù–Ü –§–£–ù–ö–¶–Ü–á =====

def check_handlers_status() -> Dict[str, bool]:
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –≤—Å—ñ—Ö —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤"""
    status: Dict[str, bool] = {
        "basic_commands": False,
        "admin_panel": False,
        "content": False,
        "duels": False,
        "moderation": False,
        "gamification": False
    }
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –º–æ–¥—É–ª—ñ–≤
    modules_to_check: List[str] = [
        "basic_commands",
        "admin_panel_handlers",
        "content_handlers", 
        "duel_handlers",
        "moderation_handlers",
        "gamification_handlers"
    ]
    
    for module_name in modules_to_check:
        try:
            __import__(f"handlers.{module_name}")
            key = module_name.replace("_handlers", "").replace("admin_panel", "admin_panel")
            if key in status:
                status[key] = True
        except ImportError:
            pass
    
    return status

def get_handlers_summary() -> Dict[str, Any]:
    """–û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ–∑—é–º–µ —Å—Ç–∞–Ω—É —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤"""
    status = check_handlers_status()
    
    total_modules = len(status)
    available_modules = sum(status.values())
    
    return {
        "total_modules": total_modules,
        "available_modules": available_modules,
        "availability_rate": (available_modules / total_modules) * 100,
        "status": status,
        "recommendation": _get_status_recommendation(available_modules, total_modules)
    }

def _get_status_recommendation(available: int, total: int) -> str:
    """–û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Å—Ç–∞—Ç—É—Å—É"""
    rate = (available / total) * 100
    
    if rate >= 90:
        return "üéâ –í—Å—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏ –ø—Ä–∞—Ü—é—é—Ç—å –≤—ñ–¥–º—ñ–Ω–Ω–æ!"
    elif rate >= 70:
        return "‚úÖ –ë—ñ–ª—å—à—ñ—Å—Ç—å —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤ –ø—Ä–∞—Ü—é—î, –±–æ—Ç —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π"
    elif rate >= 50:
        return "‚ö†Ô∏è –ß–∞—Å—Ç–∏–Ω–∞ —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –¥–µ—è–∫—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –æ–±–º–µ–∂–µ–Ω—ñ"
    else:
        return "‚ùå –ë–∞–≥–∞—Ç–æ —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, —Ä–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π"

# ===== –ï–ö–°–ü–û–†–¢ =====
__all__ = [
    "register_handlers",
    "check_handlers_status", 
    "get_handlers_summary"
]

logger.info(f"üéÆ Handlers –º–æ–¥—É–ª—å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ fallback –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é")