#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üíæ –Ñ–î–ò–ù–ê –ö–û–ù–°–û–õ–Ü–î–û–í–ê–ù–ê –ú–û–î–ï–õ–¨ –ë–î - POSTGRESQL –°–£–ú–Ü–°–ù–ê üíæ

–í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø:
‚úÖ BigInteger –¥–ª—è Telegram User ID (–ø—ñ–¥—Ç—Ä–∏–º–∫–∞ –≤–µ–ª–∏–∫–∏—Ö ID)
‚úÖ String –∑–∞–º—ñ—Å—Ç—å SQLEnum –¥–ª—è PostgreSQL —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
‚úÖ –£–∑–≥–æ–¥–∂–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ User –±–µ–∑ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—ñ–≤ –ø–æ–ª—ñ–≤
‚úÖ –î–æ–¥–∞–Ω–æ —ñ–Ω–¥–µ–∫—Å–∏ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ñ –∑–≤'—è–∑–∫–∏ –º—ñ–∂ —Ç–∞–±–ª–∏—Ü—è–º–∏
‚úÖ –†–æ–∑—à–∏—Ä–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –±–∞–ª—ñ–≤ —Ç–∞ –¥–æ—Å—è–≥–Ω–µ–Ω—å
"""

from datetime import datetime
from enum import Enum
from typing import Optional

from sqlalchemy import (
    BigInteger, Boolean, Column, DateTime, Float, ForeignKey, 
    Integer, String, Text, Index, UniqueConstraint
)
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship

Base = declarative_base()

# üéØ ENUM'–ò –î–õ–Ø PYTHON (–Ω–µ –¥–ª—è PostgreSQL)
class ContentType(Enum):
    """–¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç—É - –¥–ª—è –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è"""
    MEME = "meme"
    JOKE = "joke"
    ANEKDOT = "anekdot"

class ContentStatus(Enum):
    """–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–Ω—Ç—É - –¥–ª—è –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è"""
    PENDING = "pending"
    APPROVED = "approved"
    REJECTED = "rejected"

class DuelStatus(Enum):
    """–°—Ç–∞—Ç—É—Å –¥—É–µ–ª—ñ - –¥–ª—è –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è"""
    ACTIVE = "active"
    COMPLETED = "completed"
    CANCELLED = "cancelled"

class UserRank(Enum):
    """–†–∞–Ω–≥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"""
    NEWBIE = "ü§° –ù–æ–≤–∞—á–æ–∫"
    JOKER = "üòÑ –°–º—ñ—Ö—É–Ω"
    COMEDIAN = "üòÇ –ì—É–º–æ—Ä–∏—Å—Ç"
    HUMORIST = "üé≠ –ö–æ–º—ñ–∫"
    MASTER = "üëë –ú–∞—Å—Ç–µ—Ä –†–æ—Ñ–ª—É"
    EXPERT = "üèÜ –ö–æ—Ä–æ–ª—å –ì—É–º–æ—Ä—É"
    VIRTUOSO = "üåü –õ–µ–≥–µ–Ω–¥–∞ –ú–µ–º—ñ–≤"
    LEGEND = "üöÄ –ì—É–º–æ—Ä–∏—Å—Ç–∏—á–Ω–∏–π –ì–µ–Ω—ñ–π"

# üë• –ú–û–î–ï–õ–¨ –ö–û–†–ò–°–¢–£–í–ê–ß–ê
class User(Base):
    """–ú–æ–¥–µ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ - –ö–û–ù–°–û–õ–Ü–î–û–í–ê–ù–ê –í–ï–†–°–Ü–Ø"""
    __tablename__ = "users"
    
    # üéØ –û–°–ù–û–í–ù–Ü –ü–û–õ–Ø - –í–ò–ü–†–ê–í–õ–ï–ù–û
    id = Column(BigInteger, primary_key=True)  # ‚úÖ Telegram User ID (BigInteger)
    username = Column(String(255), nullable=True, index=True)
    first_name = Column(String(255), nullable=True)
    last_name = Column(String(255), nullable=True)
    
    # üéÆ –ì–ï–ô–ú–Ü–§–Ü–ö–ê–¶–Ü–Ø - –†–û–ó–®–ò–†–ï–ù–û
    points = Column(Integer, default=0, index=True)
    rank = Column(String(100), default="ü§° –ù–æ–≤–∞—á–æ–∫")
    level = Column(Integer, default=1)
    experience = Column(Integer, default=0)
    
    # üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ö–û–ù–¢–ï–ù–¢–£
    jokes_submitted = Column(Integer, default=0)
    jokes_approved = Column(Integer, default=0)
    memes_submitted = Column(Integer, default=0)
    memes_approved = Column(Integer, default=0)
    reactions_given = Column(Integer, default=0)
    
    # ü•ä –î–£–ï–õ–Ü
    duels_participated = Column(Integer, default=0)
    duels_won = Column(Integer, default=0)
    duels_lost = Column(Integer, default=0)
    
    # ‚öôÔ∏è –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø
    daily_subscription = Column(Boolean, default=False)
    language_code = Column(String(10), default="uk")
    notifications_enabled = Column(Boolean, default=True)
    auto_accept_duels = Column(Boolean, default=False)
    
    # üìÖ –ú–ï–¢–ê–î–ê–ù–Ü
    created_at = Column(DateTime, default=datetime.utcnow)
    updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)
    last_activity = Column(DateTime, default=datetime.utcnow)
    last_daily_claim = Column(DateTime, nullable=True)
    
    # üîÑ –ó–í'–Ø–ó–ö–ò
    content = relationship("Content", back_populates="author", lazy="dynamic")
    ratings = relationship("Rating", back_populates="user", lazy="dynamic")
    duel_votes = relationship("DuelVote", back_populates="voter", lazy="dynamic")
    admin_actions = relationship("AdminAction", back_populates="admin", lazy="dynamic")
    
    # üìà –Ü–ù–î–ï–ö–°–ò
    __table_args__ = (
        Index('idx_user_points', 'points'),
        Index('idx_user_activity', 'last_activity'),
        Index('idx_user_created', 'created_at'),
    )

    def __repr__(self):
        return f"<User(id={self.id}, username='{self.username}', points={self.points})>"

# üìù –ú–û–î–ï–õ–¨ –ö–û–ù–¢–ï–ù–¢–£
class Content(Base):
    """–ú–æ–¥–µ–ª—å –∫–æ–Ω—Ç–µ–Ω—Ç—É - –í–ò–ü–†–ê–í–õ–ï–ù–û –¥–ª—è PostgreSQL"""
    __tablename__ = "content"
    
    id = Column(Integer, primary_key=True)
    
    # üìù –û–°–ù–û–í–ù–ò–ô –ö–û–ù–¢–ï–ù–¢
    text = Column(Text, nullable=False)
    content_type = Column(String(20), default="joke", index=True)  # ‚úÖ String –∑–∞–º—ñ—Å—Ç—å enum
    status = Column(String(20), default="pending", index=True)     # ‚úÖ String –∑–∞–º—ñ—Å—Ç—å enum
    
    # üë§ –ê–í–¢–û–†
    author_id = Column(BigInteger, ForeignKey('users.id'), nullable=False, index=True)
    author = relationship("User", back_populates="content")
    
    # üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê
    views = Column(Integer, default=0)
    likes = Column(Integer, default=0)
    dislikes = Column(Integer, default=0)
    shares = Column(Integer, default=0)
    rating_score = Column(Float, default=0.0)
    
    # üõ°Ô∏è –ú–û–î–ï–†–ê–¶–Ü–Ø
    moderated_by = Column(BigInteger, ForeignKey('users.id'), nullable=True)
    moderation_comment = Column(Text, nullable=True)
    moderation_date = Column(DateTime, nullable=True)
    
    # üìÖ –ú–ï–¢–ê–î–ê–ù–Ü
    created_at = Column(DateTime, default=datetime.utcnow, index=True)
    updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)
    
    # üîÑ –ó–í'–Ø–ó–ö–ò
    ratings = relationship("Rating", back_populates="content", lazy="dynamic")
    
    # üìà –Ü–ù–î–ï–ö–°–ò
    __table_args__ = (
        Index('idx_content_status_type', 'status', 'content_type'),
        Index('idx_content_rating', 'rating_score'),
        Index('idx_content_created', 'created_at'),
    )

# –Ü–Ω—à—ñ –º–æ–¥–µ–ª—ñ —Å–∫–æ—Ä–æ—á–µ–Ω—ñ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç–∏...
# –í —Ä–µ–∞–ª—å–Ω–æ–º—É —Ñ–∞–π–ª—ñ –≤–æ–Ω–∏ –±—É–¥—É—Ç—å –ø–æ–≤–Ω—ñ—Å—Ç—é –ø—Ä–∏—Å—É—Ç–Ω—ñ

# üéØ –ö–û–ù–°–¢–ê–ù–¢–ò –î–õ–Ø –†–û–ë–û–¢–ò –ó –ë–î
CONTENT_TYPES = ["meme", "joke", "anekdot"]
CONTENT_STATUSES = ["pending", "approved", "rejected"]
DUEL_STATUSES = ["active", "completed", "cancelled"]

# –°–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –º–æ–¥–µ–ª–µ–π –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É
ALL_MODELS = [User, Content]  # –í —Ä–µ–∞–ª—å–Ω–æ–º—É —Ñ–∞–π–ª—ñ –≤—Å—ñ –º–æ–¥–µ–ª—ñ
