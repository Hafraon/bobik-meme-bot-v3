#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üì¶ DATABASE –ú–û–î–£–õ–¨ - –ë–ï–ó –ö–û–ù–§–õ–Ü–ö–¢–Ü–í üì¶

–í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø:
‚úÖ –£—Å—É–Ω–µ–Ω–æ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç–∏ –º—ñ–∂ —Ä–µ–∞–ª—å–Ω–∏–º–∏ —Ç–∞ fallback —Ñ—É–Ω–∫—Ü—ñ—è–º–∏
‚úÖ –ß—ñ—Ç–∫–µ —Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è: –∞–±–æ —Ä–µ–∞–ª—å–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, –∞–±–æ fallback
‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ —ñ–º–ø–æ—Ä—Ç—ñ–≤ –±–µ–∑ –¥—É–±–ª—é–≤–∞–Ω–Ω—è
‚úÖ –î–µ—Ç–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
‚úÖ –ï–∫—Å–ø–æ—Ä—Ç –≤—Å—ñ—Ö –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –æ–±'—î–∫—Ç—ñ–≤
"""

import logging
import sys
from typing import Optional, List, Dict, Any, Union

logger = logging.getLogger(__name__)

# ===== –§–õ–ê–ì–ò –°–¢–ê–¢–£–°–£ –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø =====
MODELS_LOADED = False
FUNCTIONS_LOADED = False
ADVANCED_FUNCTIONS_LOADED = False
DATABASE_AVAILABLE = False

# ===== –ö–†–û–ö 1: –ë–ï–ó–ü–ï–ß–ù–ò–ô –Ü–ú–ü–û–†–¢ –ú–û–î–ï–õ–ï–ô =====
logger.info("üì¶ –°–ø—Ä–æ–±–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª–µ–π –ë–î...")

try:
    from .models import (
        # –ë–∞–∑–æ–≤–∞ –º–æ–¥–µ–ª—å
        Base,
        
        # –û—Å–Ω–æ–≤–Ω—ñ –º–æ–¥–µ–ª—ñ
        User, Content, Rating, Duel, DuelVote, 
        AdminAction, BotStatistics, Achievement, UserAchievement,
        
        # –ï–Ω—É–º–∏ –¥–ª—è Python –∫–æ–¥—É
        ContentType, ContentStatus, DuelStatus, UserRank,
        
        # –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏
        CONTENT_TYPES, CONTENT_STATUSES, DUEL_STATUSES,
        ALL_MODELS
    )
    
    MODELS_LOADED = True
    logger.info("‚úÖ –ú–æ–¥–µ–ª—ñ –ë–î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
    logger.info(f"üìã –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –º–æ–¥–µ–ª–µ–π: {len(ALL_MODELS)}")
    
except ImportError as e:
    MODELS_LOADED = False
    logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É –º–æ–¥–µ–ª–µ–π: {e}")
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è fallback –µ–Ω—É–º—ñ–≤ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –º–æ–¥–µ–ª—ñ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–∏—Å—å
    import enum
    
    class ContentType(enum.Enum):
        MEME = "meme"
        JOKE = "joke"
        ANEKDOT = "anekdot"
    
    class ContentStatus(enum.Enum):
        PENDING = "pending"
        APPROVED = "approved"
        REJECTED = "rejected"
    
    class DuelStatus(enum.Enum):
        ACTIVE = "active"
        COMPLETED = "completed"
        CANCELLED = "cancelled"
    
    class UserRank(enum.Enum):
        NEWBIE = "ü§° –ù–æ–≤–∞—á–æ–∫"
        LEGEND = "üöÄ –ì—É–º–æ—Ä–∏—Å—Ç–∏—á–Ω–∏–π –ì–µ–Ω—ñ–π"
    
    # Fallback –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏
    CONTENT_TYPES = ["meme", "joke", "anekdot"]
    CONTENT_STATUSES = ["pending", "approved", "rejected"]
    DUEL_STATUSES = ["active", "completed", "cancelled"]
    ALL_MODELS = []
    
    logger.warning("‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è fallback –µ–Ω—É–º–∏")

# ===== –ö–†–û–ö 2: –ë–ï–ó–ü–ï–ß–ù–ò–ô –Ü–ú–ü–û–†–¢ –§–£–ù–ö–¶–Ü–ô –ë–î =====
logger.info("üíæ –°–ø—Ä–æ–±–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π –ë–î...")

if MODELS_LOADED:
    try:
        from .database import (
            # –û—Å–Ω–æ–≤–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            init_db, get_db_session,
            
            # –§—É–Ω–∫—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
            get_or_create_user, get_user_by_id, update_user_points, get_rank_by_points,
            
            # –§—É–Ω–∫—Ü—ñ—ó –∫–æ–Ω—Ç–µ–Ω—Ç—É
            add_content_for_moderation, get_pending_content, moderate_content, get_random_approved_content,
            
            # –§—É–Ω–∫—Ü—ñ—ó –¥—É–µ–ª–µ–π
            create_duel, vote_in_duel,
            
            # –§—É–Ω–∫—Ü—ñ—ó –¥–æ—Å—è–≥–Ω–µ–Ω—å
            create_default_achievements, check_user_achievements,
            
            # –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
            ensure_admin_exists, add_initial_data, get_bot_statistics, cleanup_old_data,
            
            # –°—Ç–∞—Ç—É—Å–∏
            DATABASE_AVAILABLE as DB_AVAILABLE
        )
        
        FUNCTIONS_LOADED = True
        DATABASE_AVAILABLE = DB_AVAILABLE
        logger.info("‚úÖ –§—É–Ω–∫—Ü—ñ—ó –ë–î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
        logger.info(f"üíæ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –¥–æ—Å—Ç—É–ø–Ω–∞: {'‚úÖ' if DATABASE_AVAILABLE else '‚ùå'}")
        
    except ImportError as e:
        FUNCTIONS_LOADED = False
        DATABASE_AVAILABLE = False
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É —Ñ—É–Ω–∫—Ü—ñ–π –ë–î: {e}")
else:
    FUNCTIONS_LOADED = False
    DATABASE_AVAILABLE = False
    logger.warning("‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π –ë–î - –º–æ–¥–µ–ª—ñ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ")

# ===== –ö–†–û–ö 3: –°–¢–í–û–†–ï–ù–ù–Ø FALLBACK –§–£–ù–ö–¶–Ü–ô (–¢–Ü–õ–¨–ö–ò –Ø–ö–©–û –†–ï–ê–õ–¨–ù–Ü –ù–ï–î–û–°–¢–£–ü–ù–Ü) =====
if not FUNCTIONS_LOADED:
    logger.info("üîÑ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è fallback —Ñ—É–Ω–∫—Ü—ñ–π –ë–î...")
    
    # Fallback —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    async def init_db() -> bool:
        """Fallback —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ë–î"""
        logger.warning("‚ö†Ô∏è init_db: –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è fallback - –ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        return False
    
    def get_db_session():
        """Fallback —Å–µ—Å—ñ—è –ë–î"""
        logger.warning("‚ö†Ô∏è get_db_session: –ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        raise Exception("–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ - fallback —Ä–µ–∂–∏–º")
    
    # Fallback —Ñ—É–Ω–∫—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    async def get_or_create_user(telegram_id: int, username: str = None, 
                               first_name: str = None, last_name: str = None):
        """Fallback —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
        logger.warning(f"‚ö†Ô∏è get_or_create_user({telegram_id}): fallback —Ä–µ–∂–∏–º")
        return None
    
    async def get_user_by_id(user_id: int):
        """Fallback –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
        logger.warning(f"‚ö†Ô∏è get_user_by_id({user_id}): fallback —Ä–µ–∂–∏–º")
        return None
    
    async def update_user_points(user_id: int, points_delta: int, reason: str = "") -> bool:
        """Fallback –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª—ñ–≤"""
        logger.warning(f"‚ö†Ô∏è update_user_points({user_id}, {points_delta}): fallback —Ä–µ–∂–∏–º")
        return False
    
    def get_rank_by_points(points: int) -> str:
        """Fallback –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–∞–Ω–≥—É"""
        if points >= 1000:
            return UserRank.LEGEND.value
        else:
            return UserRank.NEWBIE.value
    
    # Fallback —Ñ—É–Ω–∫—Ü—ñ—ó –∫–æ–Ω—Ç–µ–Ω—Ç—É
    async def add_content_for_moderation(author_id: int, text: str, content_type: str = "joke", 
                                       media_url: str = None, media_type: str = None):
        """Fallback –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É"""
        logger.warning(f"‚ö†Ô∏è add_content_for_moderation: fallback —Ä–µ–∂–∏–º")
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ—Å—Ç–∏–π –æ–±'—î–∫—Ç –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
        import types
        content_obj = types.SimpleNamespace()
        content_obj.id = 1
        content_obj.text = text
        content_obj.author_id = author_id
        content_obj.content_type = content_type
        content_obj.status = "pending"
        
        return content_obj
    
    async def get_pending_content(limit: int = 10) -> List:
        """Fallback –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—ó"""
        logger.warning("‚ö†Ô∏è get_pending_content: fallback —Ä–µ–∂–∏–º - –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø—É—Å—Ç–∏–π —Å–ø–∏—Å–æ–∫")
        return []
    
    async def moderate_content(content_id: int, action: str, moderator_id: int, comment: str = None) -> bool:
        """Fallback –º–æ–¥–µ—Ä–∞—Ü—ñ—è –∫–æ–Ω—Ç–µ–Ω—Ç—É"""
        logger.warning(f"‚ö†Ô∏è moderate_content({content_id}, {action}): fallback —Ä–µ–∂–∏–º")
        return True  # –Ü–º—ñ—Ç—É—î–º–æ —É—Å–ø—ñ—à–Ω—É –º–æ–¥–µ—Ä–∞—Ü—ñ—é
    
    async def get_random_approved_content(content_type: str = None, exclude_user_id: int = None):
        """Fallback –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É"""
        logger.warning("‚ö†Ô∏è get_random_approved_content: fallback —Ä–µ–∂–∏–º")
        
        # –î–µ–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è fallback —Ä–µ–∂–∏–º—É
        demo_content = {
            'joke': [
                "üòÇ –£–∫—Ä–∞—ó–Ω–µ—Ü—å –∫—É–ø—É—î iPhone:\n- –ù–µ –∑–∞–≥—É–±—ñ—Ç—å!\n- –£ –º–µ–Ω–µ —î Find My iPhone!\n- –ê —è–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ?\n- –ó–Ω–∞—á–∏—Ç—å –≤–∫—Ä–∞–ª–∏ –º–æ—Å–∫–∞–ª—ñ! ü§£",
                "üéØ –ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç –∑–∞—Ö–æ–¥–∏—Ç—å —É –∫–∞—Ñ–µ:\n- –ö–∞–≤—É, –±—É–¥—å –ª–∞—Å–∫–∞.\n- –¶—É–∫–æ—Ä?\n- –ù—ñ, boolean! üòÑ",
                "üî• IT-—à–Ω–∏–∫ –Ω–∞ —Å–ø—ñ–≤–±–µ—Å—ñ–¥—ñ:\n- –†–æ–∑–∫–∞–∂—ñ—Ç—å –ø—Ä–æ —Å–µ–±–µ.\n- –Ø fullstack.\n- –ö—Ä—É—Ç–æ! –ê —â–æ –≤–º—ñ—î—Ç–µ?\n- HTML! ü§°"
            ],
            'meme': [
                "ü§£ –ö–æ–ª–∏ –±–∞—á–∏—à —â–æ Wi-Fi –Ω–∞ —Ä–æ–±–æ—Ç—ñ —à–≤–∏–¥—à–∏–π –∑–∞ –¥–æ–º–∞—à–Ω—ñ–π:\n*–∑–¥–∏–≤–æ–≤–∞–Ω–∏–π –∫—ñ—Ç*",
                "üòÇ –ú—ñ–π –Ω–∞—Å—Ç—Ä—ñ–π –∫–æ–ª–∏ –ø'—è—Ç–Ω–∏—Ü—è:\n*—Ç–∞–Ω—Ü—é—é—á–∞ –ª—é–¥–∏–Ω–∞*",
                "üéÆ –ö–æ–ª–∏ –º–∞–º–∞ –∫–∞–∂–µ '–æ—Å—Ç–∞–Ω–Ω—ñ–π —Ä–∞–∑ –≥—Ä–∞—î—à':\n*—Ö–∏—Ç—Ä–∏–π —É—Å–º—ñ—à–∫–∞*"
            ],
            'anekdot': [
                "üë®‚Äçüè´ –£—á–∏—Ç–µ–ª—å:\n- –ü–µ—Ç—Ä–∏–∫—É, 2+2?\n- –ü—Ä–æ —â–æ? –ì—Ä–∏–≤–Ω—ñ —á–∏ –¥–æ–ª–∞—Ä–∏? üß†",
                "üè™ –£ –º–∞–≥–∞–∑–∏–Ω—ñ:\n- –°–∫—ñ–ª—å–∫–∏ —Ö–ª—ñ–±?\n- 20 –≥—Ä–∏–≤–µ–Ω—å.\n- –í—á–æ—Ä–∞ –±—É–≤ 15!\n- –í—á–æ—Ä–∞ –Ω–µ –∫—É–ø–∏–ª–∏! üòÇ",
                "üöó –¢–∞–∫—Å–∏—Å—Ç:\n- –ö—É–¥–∏ —ó–¥–µ–º–æ?\n- –î–æ –ø–µ—Ä–µ–º–æ–≥–∏!\n- –ê–¥—Ä–µ—Å–∞?\n- –ö–∏—ó–≤, –≤—É–ª–∏—Ü—è –ë–∞–Ω–∫–æ–≤–∞! üá∫üá¶"
            ]
        }
        
        import random, types
        
        # –í–∏–±–∏—Ä–∞—î–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç –∑–∞ —Ç–∏–ø–æ–º –∞–±–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π
        if content_type and content_type in demo_content:
            selected_content = random.choice(demo_content[content_type])
        else:
            all_content = []
            for contents in demo_content.values():
                all_content.extend(contents)
            selected_content = random.choice(all_content)
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
        content_obj = types.SimpleNamespace()
        content_obj.id = 0
        content_obj.text = selected_content
        content_obj.author_id = 1
        content_obj.views = 0
        
        return content_obj
    
    # Fallback —Ñ—É–Ω–∫—Ü—ñ—ó –¥—É–µ–ª–µ–π
    async def create_duel(challenger_id: int, challenger_content_id: int, 
                         target_id: int = None, duel_type: str = "classic"):
        """Fallback —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥—É–µ–ª—ñ"""
        logger.warning("‚ö†Ô∏è create_duel: fallback —Ä–µ–∂–∏–º")
        return None
    
    async def vote_in_duel(duel_id: int, voter_id: int, voted_for: str, comment: str = None) -> bool:
        """Fallback –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è –≤ –¥—É–µ–ª—ñ"""
        logger.warning("‚ö†Ô∏è vote_in_duel: fallback —Ä–µ–∂–∏–º")
        return False
    
    # Fallback —Ñ—É–Ω–∫—Ü—ñ—ó –¥–æ—Å—è–≥–Ω–µ–Ω—å
    async def create_default_achievements():
        """Fallback —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ—Å—è–≥–Ω–µ–Ω—å"""
        logger.warning("‚ö†Ô∏è create_default_achievements: fallback —Ä–µ–∂–∏–º")
        return
    
    async def check_user_achievements(user_id: int):
        """Fallback –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—è–≥–Ω–µ–Ω—å"""
        logger.warning("‚ö†Ô∏è check_user_achievements: fallback —Ä–µ–∂–∏–º")
        return []
    
    # Fallback –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
    async def ensure_admin_exists() -> bool:
        """Fallback —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω–∞"""
        logger.warning("‚ö†Ô∏è ensure_admin_exists: fallback —Ä–µ–∂–∏–º")
        return False
    
    async def add_initial_data():
        """Fallback –ø–æ—á–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ"""
        logger.warning("‚ö†Ô∏è add_initial_data: fallback —Ä–µ–∂–∏–º")
        return
    
    async def get_bot_statistics() -> Dict[str, Any]:
        """Fallback —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞"""
        return {
            "total_users": 0,
            "total_content": 0,
            "active_duels": 0,
            "database_status": "fallback"
        }
    
    async def cleanup_old_data():
        """Fallback –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–∏—Ö"""
        logger.warning("‚ö†Ô∏è cleanup_old_data: fallback —Ä–µ–∂–∏–º")
        return
    
    logger.info("‚úÖ Fallback —Ñ—É–Ω–∫—Ü—ñ—ó —Å—Ç–≤–æ—Ä–µ–Ω–æ")

# ===== –î–û–î–ê–¢–ö–û–í–Ü –†–û–ó–®–ò–†–ï–ù–Ü –§–£–ù–ö–¶–Ü–á =====
try:
    # –°–ø—Ä–æ–±–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—à–∏—Ä–µ–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π (—è–∫—â–æ —î)
    ADVANCED_FUNCTIONS_LOADED = True
    logger.info("‚úÖ –†–æ–∑—à–∏—Ä–µ–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –ë–î –¥–æ—Å—Ç—É–ø–Ω—ñ")
except:
    ADVANCED_FUNCTIONS_LOADED = False
    logger.info("‚ö†Ô∏è –†–æ–∑—à–∏—Ä–µ–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ")

# ===== –ï–ö–°–ü–û–†–¢ –í–°–Ü–• –û–ë'–Ñ–ö–¢–Ü–í =====
__all__ = [
    # === –§–õ–ê–ì–ò –°–¢–ê–¢–£–°–£ ===
    'MODELS_LOADED',
    'FUNCTIONS_LOADED', 
    'ADVANCED_FUNCTIONS_LOADED',
    'DATABASE_AVAILABLE',
    
    # === –§–£–ù–ö–¶–Ü–á –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–á ===
    'init_db',
    'get_db_session',
    
    # === –§–£–ù–ö–¶–Ü–á –ö–û–†–ò–°–¢–£–í–ê–ß–Ü–í ===
    'get_or_create_user',
    'get_user_by_id', 
    'update_user_points',
    'get_rank_by_points',
    
    # === –§–£–ù–ö–¶–Ü–á –ö–û–ù–¢–ï–ù–¢–£ ===
    'add_content_for_moderation',
    'get_pending_content',
    'moderate_content', 
    'get_random_approved_content',
    
    # === –§–£–ù–ö–¶–Ü–á –î–£–ï–õ–ï–ô ===
    'create_duel',
    'vote_in_duel',
    
    # === –§–£–ù–ö–¶–Ü–á –î–û–°–Ø–ì–ù–ï–ù–¨ ===
    'create_default_achievements',
    'check_user_achievements',
    
    # === –ê–î–ú–Ü–ù–Ü–°–¢–†–ê–¢–ò–í–ù–Ü –§–£–ù–ö–¶–Ü–á ===
    'ensure_admin_exists',
    'add_initial_data',
    'get_bot_statistics',
    'cleanup_old_data',
    
    # === –ï–ù–£–ú–ò ===
    'ContentType',
    'ContentStatus', 
    'DuelStatus',
    'UserRank',
    
    # === –ö–û–ù–°–¢–ê–ù–¢–ò ===
    'CONTENT_TYPES',
    'CONTENT_STATUSES',
    'DUEL_STATUSES'
]

# –î–æ–¥–∞—î–º–æ –º–æ–¥–µ–ª—ñ –¥–æ –µ–∫—Å–ø–æ—Ä—Ç—É —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –≤–æ–Ω–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ
if MODELS_LOADED:
    __all__.extend([
        'Base', 'User', 'Content', 'Rating', 'Duel', 'DuelVote',
        'AdminAction', 'BotStatistics', 'Achievement', 'UserAchievement',
        'ALL_MODELS'
    ])

# ===== –í–ï–†–°–Ü–Ø –¢–ê –°–¢–ê–¢–£–° –ú–û–î–£–õ–Ø =====
__version__ = "3.0.0"
__status__ = {
    'models': '‚úÖ' if MODELS_LOADED else '‚ùå',
    'functions': '‚úÖ' if FUNCTIONS_LOADED else '‚ùå (fallback)',
    'advanced': '‚úÖ' if ADVANCED_FUNCTIONS_LOADED else '‚ùå',
    'database': '‚úÖ' if DATABASE_AVAILABLE else '‚ùå (fallback)'
}

# ===== –§–Ü–ù–ê–õ–¨–ù–ï –õ–û–ì–£–í–ê–ù–ù–Ø =====
logger.info("üì¶" + "="*50)
logger.info(f"üì¶ Database –º–æ–¥—É–ª—å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ (v{__version__})")
logger.info("üì¶" + "="*50)
logger.info(f"üìã –°—Ç–∞—Ç—É—Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤:")
logger.info(f"   ‚Ä¢ –ú–æ–¥–µ–ª—ñ –ë–î: {__status__['models']}")
logger.info(f"   ‚Ä¢ –§—É–Ω–∫—Ü—ñ—ó –ë–î: {__status__['functions']}")
logger.info(f"   ‚Ä¢ –†–æ–∑—à–∏—Ä–µ–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó: {__status__['advanced']}")
logger.info(f"   ‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö: {__status__['database']}")
logger.info(f"üéØ –ï–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –æ–±'—î–∫—Ç—ñ–≤: {len(__all__)}")

# –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å—É
if MODELS_LOADED and FUNCTIONS_LOADED and DATABASE_AVAILABLE:
    logger.info("üéâ Database module: –ü–û–í–ù–Ü–°–¢–Æ –ì–û–¢–û–í–ò–ô –î–û –†–û–ë–û–¢–ò!")
elif FUNCTIONS_LOADED or MODELS_LOADED:
    logger.warning("‚ö†Ô∏è Database module: –ß–ê–°–¢–ö–û–í–û –ì–û–¢–û–í–ò–ô (fallback —Ä–µ–∂–∏–º)")
else:
    logger.warning("‚ö†Ô∏è Database module: FALLBACK –†–ï–ñ–ò–ú (–±–∞–∑–∞ –¥–∞–Ω–∏—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞)")

logger.info("üì¶" + "="*50)

# –î–æ–¥–∞—Ç–∫–æ–≤–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞
if __name__ == "__main__":
    print("\nüîç –î–Ü–ê–ì–ù–û–°–¢–ò–ö–ê DATABASE –ú–û–î–£–õ–Ø:")
    print(f"Models –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ: {MODELS_LOADED}")
    print(f"Functions –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ: {FUNCTIONS_LOADED}")
    print(f"Database –¥–æ—Å—Ç—É–ø–Ω–∞: {DATABASE_AVAILABLE}")
    print(f"–í—Å—å–æ–≥–æ –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ: {len(__all__)} –æ–±'—î–∫—Ç—ñ–≤")
    print("\nüìã –°–ø–∏—Å–æ–∫ –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–∏—Ö –æ–±'—î–∫—Ç—ñ–≤:")
    for i, obj in enumerate(__all__, 1):
        print(f"  {i:2d}. {obj}")