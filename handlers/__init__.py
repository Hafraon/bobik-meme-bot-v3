#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üß†üòÇüî• –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø–∞–∫–µ—Ç—É handlers –∑ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—î—é –≤—Å—ñ—Ö —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤ üß†üòÇüî•
"""

import logging
from aiogram import Dispatcher

logger = logging.getLogger(__name__)

def register_all_handlers(dp: Dispatcher):
    """–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –≤—Å—ñ—Ö —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤ –±–æ—Ç–∞"""
    
    try:
        # ===== –û–°–ù–û–í–ù–Ü –ö–û–ú–ê–ù–î–ò =====
        from .basic_commands import register_basic_handlers
        register_basic_handlers(dp)
        logger.info("‚úÖ –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –æ—Å–Ω–æ–≤–Ω—ñ –∫–æ–º–∞–Ω–¥–∏")
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –æ—Å–Ω–æ–≤–Ω–∏—Ö –∫–æ–º–∞–Ω–¥: {e}")
    
    try:
        # ===== –ê–î–ú–Ü–ù-–ü–ê–ù–ï–õ–¨ =====
        from .admin_panel_handlers import register_admin_handlers
        register_admin_handlers(dp)
        logger.info("‚úÖ –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å")
        
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞: {e}")
    
    try:
        # ===== –ì–ï–ô–ú–Ü–§–Ü–ö–ê–¶–Ü–Ø =====
        from .gamification_handlers import register_gamification_handlers
        register_gamification_handlers(dp)
        logger.info("‚úÖ –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –≥–µ–π–º—ñ—Ñ—ñ–∫–∞—Ü—ñ—é")
        
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –ì–µ–π–º—ñ—Ñ—ñ–∫–∞—Ü—ñ—è –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞: {e}")
    
    try:
        # ===== –ö–û–ù–¢–ï–ù–¢ =====
        from .content_handlers import register_content_handlers
        register_content_handlers(dp)
        logger.info("‚úÖ –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç-—Ö–µ–Ω–¥–ª–µ—Ä–∏")
        
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –ö–æ–Ω—Ç–µ–Ω—Ç-—Ö–µ–Ω–¥–ª–µ—Ä–∏ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ: {e}")
    
    try:
        # ===== –ú–û–î–ï–†–ê–¶–Ü–Ø =====
        from .moderation_handlers import register_moderation_handlers
        register_moderation_handlers(dp)
        logger.info("‚úÖ –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –º–æ–¥–µ—Ä–∞—Ü—ñ—é")
        
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –ú–æ–¥–µ—Ä–∞—Ü—ñ—è –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞: {e}")
    
    try:
        # ===== –î–£–ï–õ–Ü =====
        from .duel_handlers import register_duel_handlers
        register_duel_handlers(dp)
        logger.info("‚úÖ –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –¥—É–µ–ª—ñ")
        
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –î—É–µ–ª—ñ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ: {e}")
    
    logger.info("üéØ –í—Å—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ!")

# Fallback —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è compatibility
def register_handlers(dp: Dispatcher):
    """Alias –¥–ª—è register_all_handlers"""
    register_all_handlers(dp)

__all__ = ['register_all_handlers', 'register_handlers']