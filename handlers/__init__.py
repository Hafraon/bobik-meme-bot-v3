#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üß†üòÇüî• –§–Ü–ù–ê–õ–¨–ù–ê –†–ï–Ñ–°–¢–†–ê–¶–Ü–Ø –í–°–Ü–• –•–ï–ù–î–õ–ï–†–Ü–í üß†üòÇüî•
"""

import logging
from aiogram import Dispatcher

logger = logging.getLogger(__name__)

def register_handlers(dp: Dispatcher):
    """
    –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –≤—Å—ñ—Ö —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤ –±–æ—Ç–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É
    
    –í–ê–ñ–õ–ò–í–û: –ü–æ—Ä—è–¥–æ–∫ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –º–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è!
    –ë—ñ–ª—å—à —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏ –º–∞—é—Ç—å —Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è –ø–µ—Ä–µ–¥ –∑–∞–≥–∞–ª—å–Ω–∏–º–∏.
    """
    
    logger.info("üöÄ –ü–æ—á–∏–Ω–∞—é —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤...")
    
    # ===== 1. –û–°–ù–û–í–ù–Ü –ö–û–ú–ê–ù–î–ò =====
    try:
        from .basic_commands import register_basic_handlers
        register_basic_handlers(dp)
        logger.info("‚úÖ –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –æ—Å–Ω–æ–≤–Ω—ñ –∫–æ–º–∞–Ω–¥–∏")
    except ImportError as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É basic_commands: {e}")
        register_fallback_basic_handlers(dp)
    
    # ===== 2. –ê–î–ú–Ü–ù-–ü–ê–ù–ï–õ–¨ =====
    try:
        from .admin_panel_handlers import register_admin_handlers
        register_admin_handlers(dp)
        logger.info("‚úÖ –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å")
    except ImportError as e:
        logger.warning(f"‚ö†Ô∏è –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞: {e}")
    
    # ===== 3. –ö–û–ù–¢–ï–ù–¢ (–ú–ï–ú–ò/–ê–ù–ï–ö–î–û–¢–ò) =====
    try:
        from .content_handlers import register_content_handlers
        register_content_handlers(dp)
        logger.info("‚úÖ –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç")
    except ImportError as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É content_handlers: {e}")
        register_fallback_content_handlers(dp)
    
    # ===== 4. –ì–ï–ô–ú–Ü–§–Ü–ö–ê–¶–Ü–Ø =====
    try:
        from .gamification_handlers import register_gamification_handlers
        register_gamification_handlers(dp)
        logger.info("‚úÖ –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –≥–µ–π–º—ñ—Ñ—ñ–∫–∞—Ü—ñ—é")
    except ImportError as e:
        logger.warning(f"‚ö†Ô∏è –ì–µ–π–º—ñ—Ñ—ñ–∫–∞—Ü—ñ—è –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞: {e}")
    
    # ===== 5. –î–£–ï–õ–Ü =====
    try:
        from .duel_handlers import register_duel_handlers
        register_duel_handlers(dp)
        logger.info("‚úÖ –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –¥—É–µ–ª—ñ")
    except ImportError as e:
        logger.warning(f"‚ö†Ô∏è –î—É–µ–ª—ñ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ: {e}")
    
    # ===== 6. –ú–û–î–ï–†–ê–¶–Ü–Ø =====
    try:
        from .moderation_handlers import register_moderation_handlers
        register_moderation_handlers(dp)
        logger.info("‚úÖ –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –º–æ–¥–µ—Ä–∞—Ü—ñ—é")
    except ImportError as e:
        logger.warning(f"‚ö†Ô∏è –ú–æ–¥–µ—Ä–∞—Ü—ñ—è –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞: {e}")
        # –ú–æ–¥–µ—Ä–∞—Ü—ñ—è –º–æ–∂–µ –±—É—Ç–∏ —á–∞—Å—Ç–∏–Ω–æ—é –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ
    
    # ===== 7. –Ü–ù–®–Ü –•–ï–ù–î–õ–ï–†–ò =====
    try:
        # –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ —ñ–Ω—à—ñ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏
        pass
    except ImportError as e:
        logger.warning(f"‚ö†Ô∏è –î–æ–¥–∞—Ç–∫–æ–≤—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ: {e}")
    
    logger.info("üéØ –í—Å—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ!")

# ===== FALLBACK –•–ï–ù–î–õ–ï–†–ò =====

def register_fallback_basic_handlers(dp: Dispatcher):
    """Fallback –æ—Å–Ω–æ–≤–Ω—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏"""
    from aiogram.filters import Command, CommandStart
    from aiogram.types import Message
    
    @dp.message(CommandStart())
    async def fallback_start(message: Message):
        await message.answer(
            "üß†üòÇüî• <b>–í—ñ—Ç–∞—é!</b>\n\n"
            "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ —É –±–∞–∑–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ.\n"
            "–î–µ—è–∫—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –º–æ–∂—É—Ç—å –±—É—Ç–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ.\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n"
            "‚Ä¢ /help - –¥–æ–≤—ñ–¥–∫–∞\n"
            "‚Ä¢ /meme - –æ—Ç—Ä–∏–º–∞—Ç–∏ –º–µ–º\n"
            "‚Ä¢ /anekdot - –æ—Ç—Ä–∏–º–∞—Ç–∏ –∞–Ω–µ–∫–¥–æ—Ç"
        )
    
    @dp.message(Command("help"))
    async def fallback_help(message: Message):
        await message.answer(
            "‚ùì <b>–î–æ–≤—ñ–¥–∫–∞</b>\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n"
            "‚Ä¢ /start - –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é\n"
            "‚Ä¢ /meme - –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –º–µ–º\n"
            "‚Ä¢ /anekdot - —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –∞–Ω–µ–∫–¥–æ—Ç\n"
            "‚Ä¢ /profile - –≤–∞—à –ø—Ä–æ—Ñ—ñ–ª—å\n"
            "‚Ä¢ /top - —Ç–∞–±–ª–∏—Ü—è –ª—ñ–¥–µ—Ä—ñ–≤\n"
            "‚Ä¢ /duel - –¥—É–µ–ª—å –∂–∞—Ä—Ç—ñ–≤\n\n"
            "üìù –ù–∞–¥—ñ—à–ª—ñ—Ç—å –∂–∞—Ä—Ç –±–æ—Ç—É —â–æ–± –ø–æ–¥–∞—Ç–∏ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—é!"
        )
    
    logger.info("‚úÖ Fallback –æ—Å–Ω–æ–≤–Ω—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")

def register_fallback_content_handlers(dp: Dispatcher):
    """Fallback —Ö–µ–Ω–¥–ª–µ—Ä–∏ –∫–æ–Ω—Ç–µ–Ω—Ç—É"""
    from aiogram.filters import Command
    from aiogram.types import Message
    import random
    
    # Fallback –∂–∞—Ä—Ç–∏
    FALLBACK_JOKES = [
        "–©–æ —Ä–æ–±–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç –∫–æ–ª–∏ –Ω–µ –º–æ–∂–µ –∑–∞—Å–Ω—É—Ç–∏? –†–∞—Ö—É—î –æ–≤–µ—Ü—å —É —Ü–∏–∫–ª—ñ while!",
        "–ß–æ–º—É –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏ –ª—é–±–ª—è—Ç—å —Ç–µ–º–Ω–∏–π —Ä–µ–∂–∏–º? –¢–æ–º—É —â–æ —Å–≤—ñ—Ç–ª–æ –ø—Ä–∏–≤–∞–±–ª—é—î –∂—É–∫—ñ–≤!",
        "–©–æ —Å–∫–∞–∑–∞–≤ HTML CSS? –ë–µ–∑ —Ç–µ–±–µ —è –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞—á—É!",
        "–ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç –∑–∞—Ö–æ–¥–∏—Ç—å –≤ –±–∞—Ä —ñ –∑–∞–º–æ–≤–ª—è—î 1 –ø–∏–≤–æ, 0 –ø–∏–≤, -1 –ø–∏–≤–æ, NULL –ø–∏–≤...",
        "–ß–æ–º—É –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏ –ø–ª—É—Ç–∞—é—Ç—å –•–µ–ª–ª–æ—É—ñ–Ω —ñ –†—ñ–∑–¥–≤–æ? –¢–æ–º—É —â–æ 31 OCT = 25 DEC!"
    ]
    
    @dp.message(Command("meme"))
    async def fallback_meme(message: Message):
        joke = random.choice(FALLBACK_JOKES)
        await message.answer(
            f"üî• <b>–ú–µ–º:</b>\n\n{joke}\n\n"
            f"üí° <i>–¶–µ fallback –∫–æ–Ω—Ç–µ–Ω—Ç. –î–æ–¥–∞–π—Ç–µ –≤–ª–∞—Å–Ω—ñ –º–µ–º–∏!</i>"
        )
    
    @dp.message(Command("anekdot"))
    async def fallback_anekdot(message: Message):
        joke = random.choice(FALLBACK_JOKES)
        await message.answer(
            f"üòÇ <b>–ê–Ω–µ–∫–¥–æ—Ç:</b>\n\n{joke}\n\n"
            f"üí° <i>–¶–µ fallback –∫–æ–Ω—Ç–µ–Ω—Ç. –î–æ–¥–∞–π—Ç–µ –≤–ª–∞—Å–Ω—ñ –∞–Ω–µ–∫–¥–æ—Ç–∏!</i>"
        )
    
    @dp.message(Command("submit"))
    async def fallback_submit(message: Message):
        await message.answer(
            "üìù <b>–ü–æ–¥–∞—á–∞ –∫–æ–Ω—Ç–µ–Ω—Ç—É</b>\n\n"
            "–§—É–Ω–∫—Ü—ñ—è –ø–æ–¥–∞—á—ñ –∫–æ–Ω—Ç–µ–Ω—Ç—É –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–∞–∑–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ.\n"
            "–î–ª—è –ø–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É –ø–æ—Ç—Ä—ñ–±–Ω–∞ –ë–î —Ç–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—è.\n\n"
            "üí° –ü—Ä–æ—Å—Ç–æ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Å–≤—ñ–π –∂–∞—Ä—Ç –±–æ—Ç—É!"
        )
    
    logger.info("‚úÖ Fallback –∫–æ–Ω—Ç–µ–Ω—Ç —Ö–µ–Ω–¥–ª–µ—Ä–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")

# ===== –î–Ü–ê–ì–ù–û–°–¢–ò–ö–ê =====

def check_handlers_status():
    """–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤"""
    handlers_status = {
        "basic_commands": False,
        "admin_panel": False,
        "content_handlers": False,
        "gamification": False,
        "duel_handlers": False,
        "moderation": False
    }
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ basic_commands
    try:
        from . import basic_commands
        handlers_status["basic_commands"] = True
    except ImportError:
        pass
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ admin_panel
    try:
        from . import admin_panel_handlers
        handlers_status["admin_panel"] = True
    except ImportError:
        pass
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ content_handlers
    try:
        from . import content_handlers
        handlers_status["content_handlers"] = True
    except ImportError:
        pass
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ gamification
    try:
        from . import gamification_handlers
        handlers_status["gamification"] = True
    except ImportError:
        pass
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ duel_handlers
    try:
        from . import duel_handlers
        handlers_status["duel_handlers"] = True
    except ImportError:
        pass
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ moderation
    try:
        from . import moderation_handlers
        handlers_status["moderation"] = True
    except ImportError:
        pass
    
    return handlers_status

def log_handlers_status():
    """–ó–∞–ª–æ–≥—É–≤–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤"""
    status = check_handlers_status()
    
    logger.info("üìã –°—Ç–∞—Ç—É—Å —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤:")
    for handler_name, is_loaded in status.items():
        status_icon = "‚úÖ" if is_loaded else "‚ùå"
        logger.info(f"  {status_icon} {handler_name}")
    
    loaded_count = sum(status.values())
    total_count = len(status)
    
    logger.info(f"üìä –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: {loaded_count}/{total_count} —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤")
    
    if loaded_count == total_count:
        logger.info("üéâ –í—Å—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ —É—Å–ø—ñ—à–Ω–æ!")
    elif loaded_count >= total_count // 2:
        logger.warning("‚ö†Ô∏è –î–µ—è–∫—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ, –∞–ª–µ –±–æ—Ç –ø—Ä–∞—Ü–µ–∑–¥–∞—Ç–Ω–∏–π")
    else:
        logger.error("‚ùå –ö—Ä–∏—Ç–∏—á–Ω–æ –º–∞–ª–æ —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤! –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —ñ–º–ø–æ—Ä—Ç–∏")
    
    return status

# ===== –ï–ö–°–ü–û–†–¢ =====

__all__ = [
    'register_handlers',
    'check_handlers_status',
    'log_handlers_status',
    'register_fallback_basic_handlers',
    'register_fallback_content_handlers'
]

# –í–∏–∫–æ–Ω–∞—Ç–∏ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫—É –ø—Ä–∏ —ñ–º–ø–æ—Ä—Ç—ñ
if __name__ != "__main__":
    log_handlers_status()