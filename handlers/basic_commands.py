#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üß†üòÇüî• –û—Å–Ω–æ–≤–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞ –∑ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—î—é –∞–¥–º—ñ–Ω-–º–µ–Ω—é üß†üòÇüî•
"""

import logging
from datetime import datetime

from aiogram import Dispatcher, F
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery

from settings import settings, EMOJI, TEXTS

logger = logging.getLogger(__name__)

async def cmd_start(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /start –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º –∞–¥–º—ñ–Ω-–º–µ–Ω—é"""
    user_id = message.from_user.id
    first_name = message.from_user.first_name or "–¥—Ä—É–∂–µ"
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ/–æ–Ω–æ–≤–ª—é—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –ë–î
    try:
        from database import get_or_create_user
        await get_or_create_user(
            user_id=user_id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name
        )
    except Exception as e:
        logger.warning(f"–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {e}")
    
    # –ù–û–í–ï! –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ü–µ –∞–¥–º—ñ–Ω —ñ –ø–æ–∫–∞–∑—É—î–º–æ –∞–¥–º—ñ–Ω-–º–µ–Ω—é
    try:
        from handlers.admin_panel_handlers import auto_show_admin_menu_on_start
        admin_menu_shown = await auto_show_admin_menu_on_start(message)
        
        if admin_menu_shown:
            # –î–ª—è –∞–¥–º—ñ–Ω–∞ –ø–æ–∫–∞–∑—É—î–º–æ —Å–∫–æ—Ä–æ—á–µ–Ω–µ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è + –æ—Å–Ω–æ–≤–Ω–µ –º–µ–Ω—é
            keyboard = get_main_menu_keyboard()
            await message.answer(
                f"{EMOJI['fire']} –í—ñ—Ç–∞—é, {first_name}!\n\n"
                f"–í–∏ –≤ —Ä–µ–∂–∏–º—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∑ —Ä–æ–∑—à–∏—Ä–µ–Ω–∏–º–∏ –º–æ–∂–ª–∏–≤–æ—Å—Ç—è–º–∏.\n"
                f"–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –Ω–∏–∂—á–µ –∞–±–æ –æ—Å–Ω–æ–≤–Ω–µ –º–µ–Ω—é:",
                reply_markup=keyboard
            )
            return
    except ImportError:
        pass  # –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å –ø–æ–∫–∏ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞
    
    # –ó–≤–∏—á–∞–π–Ω–µ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    keyboard = get_main_menu_keyboard()
    
    welcome_text = (
        f"{EMOJI['brain']}{EMOJI['laugh']}{EMOJI['fire']} <b>–í—ñ—Ç–∞—é, {first_name}!</b>\n\n"
        f"–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ –±–æ—Ç–∞ –º–µ–º—ñ–≤ —Ç–∞ –∞–Ω–µ–∫–¥–æ—Ç—ñ–≤!\n\n"
        f"{EMOJI['star']} <b>–©–æ —è –≤–º—ñ—é:</b>\n"
        f"{EMOJI['laugh']} –í–∏–ø–∞–¥–∫–æ–≤—ñ –º–µ–º–∏ (+1 –±–∞–ª)\n"
        f"{EMOJI['brain']} –£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –∞–Ω–µ–∫–¥–æ—Ç–∏ (+1 –±–∞–ª)\n"
        f"{EMOJI['fire']} –ü—Ä–∏–π–æ–º –≤–∞—à–∏—Ö –∂–∞—Ä—Ç—ñ–≤ (+{settings.POINTS_FOR_SUBMISSION} –±–∞–ª—ñ–≤)\n"
        f"{EMOJI['calendar']} –©–æ–¥–µ–Ω–Ω–∞ —Ä–æ–∑—Å–∏–ª–∫–∞ (+{settings.POINTS_FOR_DAILY_ACTIVITY} –±–∞–ª–∏)\n"
        f"{EMOJI['vs']} –î—É–µ–ª—ñ –∂–∞—Ä—Ç—ñ–≤ (+{settings.POINTS_FOR_DUEL_WIN} –∑–∞ –ø–µ—Ä–µ–º–æ–≥—É)\n\n"
        f"{EMOJI['party']} <b>–ó–±–∏—Ä–∞–π—Ç–µ –±–∞–ª–∏, –ø—ñ–¥–≤–∏—â—É–π—Ç–µ —Ä–∞–Ω–≥ —ñ —Å—Ç–∞–≤–∞–π—Ç–µ –ª–µ–≥–µ–Ω–¥–æ—é –≥—É–º–æ—Ä—É!</b>\n\n"
        f"–ü–æ—á–Ω—ñ—Ç—å –∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂—á–µ –∞–±–æ –∫–æ–º–∞–Ω–¥–∏ /help"
    )
    
    await message.answer(welcome_text, reply_markup=keyboard)
    
    # –õ–æ–≥—É–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    logger.info(f"üéâ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id} ({first_name}) –∑–∞–ø—É—Å—Ç–∏–≤ –±–æ—Ç–∞")

def get_main_menu_keyboard() -> InlineKeyboardMarkup:
    """–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text=f"{EMOJI['laugh']} –ú–µ–º", callback_data="get_meme"),
            InlineKeyboardButton(text=f"{EMOJI['brain']} –ê–Ω–µ–∫–¥–æ—Ç", callback_data="get_joke")
        ],
        [
            InlineKeyboardButton(text=f"{EMOJI['profile']} –ü—Ä–æ—Ñ—ñ–ª—å", callback_data="show_profile"),
            InlineKeyboardButton(text=f"{EMOJI['top']} –õ—ñ–¥–µ—Ä–∏", callback_data="show_leaderboard")
        ],
        [
            InlineKeyboardButton(text=f"{EMOJI['calendar']} –©–æ–¥–µ–Ω–Ω–∞ —Ä–æ–∑—Å–∏–ª–∫–∞", callback_data="toggle_daily"),
            InlineKeyboardButton(text=f"{EMOJI['fire']} –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∂–∞—Ä—Ç", callback_data="submit_content")
        ],
        [
            InlineKeyboardButton(text=f"{EMOJI['vs']} –î—É–µ–ª—å", callback_data="start_duel"),
            InlineKeyboardButton(text=f"{EMOJI['help']} –î–æ–ø–æ–º–æ–≥–∞", callback_data="show_help")
        ]
    ])

async def cmd_help(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /help"""
    help_text = (
        f"{EMOJI['help']} <b>–î–û–í–Ü–î–ö–ê –ü–û –ë–û–¢–£</b>\n\n"
        f"{EMOJI['brain']} <b>–û–°–ù–û–í–ù–Ü –ö–û–ú–ê–ù–î–ò:</b>\n"
        f"‚Ä¢ /meme - –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –º–µ–º (+1 –±–∞–ª)\n"
        f"‚Ä¢ /anekdot - –æ—Ç—Ä–∏–º–∞—Ç–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –∞–Ω–µ–∫–¥–æ—Ç (+1 –±–∞–ª)\n"
        f"‚Ä¢ /submit - –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Å–≤—ñ–π –º–µ–º –∞–±–æ –∞–Ω–µ–∫–¥–æ—Ç (+{settings.POINTS_FOR_SUBMISSION} –±–∞–ª—ñ–≤)\n"
        f"‚Ä¢ /daily - –ø—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ —â–æ–¥–µ–Ω–Ω—É —Ä–æ–∑—Å–∏–ª–∫—É\n\n"
        f"{EMOJI['fire']} <b>–ì–ï–ô–ú–Ü–§–Ü–ö–ê–¶–Ü–Ø:</b>\n"
        f"‚Ä¢ /profile - –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–≤—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å —Ç–∞ –±–∞–ª–∏\n"
        f"‚Ä¢ /top - —Ç–∞–±–ª–∏—Ü—è –ª—ñ–¥–µ—Ä—ñ–≤\n"
        f"‚Ä¢ /duel - –∑–∞–ø–æ—á–∞—Ç–∫—É–≤–∞—Ç–∏ –¥—É–µ–ª—å –∂–∞—Ä—Ç—ñ–≤\n\n"
        f"{EMOJI['star']} <b>–°–ò–°–¢–ï–ú–ê –ë–ê–õ–Ü–í:</b>\n"
        f"‚Ä¢ +1 –±–∞–ª - –∑–∞ –ø–µ—Ä–µ–≥–ª—è–¥ –∫–æ–Ω—Ç–µ–Ω—Ç—É\n"
        f"‚Ä¢ +{settings.POINTS_FOR_REACTION} –±–∞–ª—ñ–≤ - –∑–∞ –ª–∞–π–∫ –º–µ–º—É/–∞–Ω–µ–∫–¥–æ—Ç—É\n"
        f"‚Ä¢ +{settings.POINTS_FOR_SUBMISSION} –±–∞–ª—ñ–≤ - –∑–∞ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∏–π –∂–∞—Ä—Ç\n"
        f"‚Ä¢ +{settings.POINTS_FOR_APPROVAL} –±–∞–ª—ñ–≤ - —è–∫—â–æ –∂–∞—Ä—Ç —Å—Ö–≤–∞–ª–µ–Ω–æ\n"
        f"‚Ä¢ +{settings.POINTS_FOR_DUEL_WIN} –±–∞–ª—ñ–≤ - –∑–∞ –ø–µ—Ä–µ–º–æ–≥—É –≤ –¥—É–µ–ª—ñ\n"
        f"‚Ä¢ +1 –±–∞–ª –∞–≤—Ç–æ—Ä—É - –∑–∞ –∫–æ–∂–µ–Ω –ª–∞–π–∫ –π–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É (–º–∞–∫—Å 10/–¥–µ–Ω—å)\n\n"
        f"{EMOJI['crown']} <b>–†–ê–ù–ì–ò:</b>\n"
        f"ü§° –ù–æ–≤–∞—á–æ–∫ ‚Üí üòÑ –°–º—ñ—Ö—É–Ω ‚Üí üòÇ –ì—É–º–æ—Ä–∏—Å—Ç ‚Üí üé≠ –ö–æ–º—ñ–∫\n"
        f"üëë –ú–∞—Å—Ç–µ—Ä –†–æ—Ñ–ª—É ‚Üí üèÜ –ö–æ—Ä–æ–ª—å –ì—É–º–æ—Ä—É ‚Üí üåü –õ–µ–≥–µ–Ω–¥–∞ –ú–µ–º—ñ–≤ ‚Üí üöÄ –ì–µ–Ω—ñ–π\n\n"
        f"{EMOJI['rocket']} –î—è–∫—É—î–º–æ –∑–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –±–æ—Ç–∞!"
    )
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text=f"{EMOJI['fire']} –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="show_main_menu"),
            InlineKeyboardButton(text=f"{EMOJI['brain']} –ü–æ—á–∞—Ç–∏", callback_data="get_joke")
        ]
    ])
    
    await message.answer(help_text, reply_markup=keyboard)

async def cmd_stats(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /stats - –∑–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞"""
    try:
        from database import get_db_session
        
        with get_db_session() as session:
            from database.models import User, Content, Rating
            
            # –ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            total_users = session.query(User).count()
            total_content = session.query(Content).filter(Content.status == "approved").count()
            total_ratings = session.query(Rating).count()
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å—å–æ–≥–æ–¥–Ω—ñ
            today = datetime.utcnow().date()
            today_ratings = session.query(Rating).filter(
                Rating.created_at >= datetime.combine(today, datetime.min.time())
            ).count()
        
        stats_text = (
            f"{EMOJI['stats']} <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–û–¢–ê</b>\n\n"
            f"üë• –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {total_users}\n"
            f"üìù –ñ–∞—Ä—Ç—ñ–≤ —Å—Ö–≤–∞–ª–µ–Ω–æ: {total_content}\n"
            f"üíñ –í—Å—å–æ–≥–æ –æ—Ü—ñ–Ω–æ–∫: {total_ratings}\n"
            f"üî• –û—Ü—ñ–Ω–æ–∫ —Å—å–æ–≥–æ–¥–Ω—ñ: {today_ratings}\n\n"
            f"‚è∞ –û–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%H:%M %d.%m.%Y')}"
        )
        
        await message.answer(stats_text)
        
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        await message.answer(
            f"{EMOJI['stats']} <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–û–¢–ê</b>\n\n"
            f"üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è...\n"
            f"–°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ"
        )

# ===== CALLBACK –û–ë–†–û–ë–ù–ò–ö–ò =====

async def callback_get_meme(callback_query: CallbackQuery):
    """Callback –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –º–µ–º—É"""
    from handlers.content_handlers import send_personalized_meme
    await send_personalized_meme(callback_query.message, from_callback=True)
    await callback_query.answer()

async def callback_get_joke(callback_query: CallbackQuery):
    """Callback –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–Ω–µ–∫–¥–æ—Ç—É"""
    from handlers.content_handlers import send_personalized_joke
    await send_personalized_joke(callback_query.message, from_callback=True)
    await callback_query.answer()

async def callback_show_profile(callback_query: CallbackQuery):
    """Callback –¥–ª—è –ø–æ–∫–∞–∑—É –ø—Ä–æ—Ñ—ñ–ª—é"""
    try:
        from handlers.gamification_handlers import show_profile
        await show_profile(callback_query.message, callback_query.from_user.id)
    except ImportError:
        await callback_query.answer("–§—É–Ω–∫—Ü—ñ—è –ø—Ä–æ—Ñ—ñ–ª—é —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    await callback_query.answer()

async def callback_show_leaderboard(callback_query: CallbackQuery):
    """Callback –¥–ª—è –ø–æ–∫–∞–∑—É —Ç–∞–±–ª–∏—Ü—ñ –ª—ñ–¥–µ—Ä—ñ–≤"""
    try:
        from handlers.gamification_handlers import show_leaderboard
        await show_leaderboard(callback_query.message)
    except ImportError:
        await callback_query.answer("–¢–∞–±–ª–∏—Ü—è –ª—ñ–¥–µ—Ä—ñ–≤ —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    await callback_query.answer()

async def callback_toggle_daily(callback_query: CallbackQuery):
    """Callback –¥–ª—è –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–æ—ó —Ä–æ–∑—Å–∏–ª–∫–∏"""
    try:
        from handlers.gamification_handlers import toggle_daily_subscription
        await toggle_daily_subscription(callback_query.message, callback_query.from_user.id)
    except ImportError:
        await callback_query.answer("–©–æ–¥–µ–Ω–Ω–∞ —Ä–æ–∑—Å–∏–ª–∫–∞ —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    await callback_query.answer()

async def callback_submit_content(callback_query: CallbackQuery):
    """Callback –¥–ª—è –ø–æ—á–∞—Ç–∫—É –ø–æ–¥–∞—á—ñ –∫–æ–Ω—Ç–µ–Ω—Ç—É"""
    await callback_query.message.answer(
        f"{EMOJI['fire']} <b>–Ø–∫ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Å–≤—ñ–π –∫–æ–Ω—Ç–µ–Ω—Ç:</b>\n\n"
        f"{EMOJI['brain']} <b>–î–ª—è –∞–Ω–µ–∫–¥–æ—Ç—É:</b>\n"
        f"–ù–∞–ø–∏—à–∏ /submit —ñ –æ–¥—Ä–∞–∑—É —Ç–µ–∫—Å—Ç –∞–Ω–µ–∫–¥–æ—Ç—É\n\n"
        f"{EMOJI['laugh']} <b>–î–ª—è –º–µ–º—É:</b>\n"
        f"–ù–∞–¥—ñ—à–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É –∑ –ø—ñ–¥–ø–∏—Å–æ–º\n\n"
        f"{EMOJI['star']} <b>–ü—Ä–∏–∫–ª–∞–¥:</b>\n"
        f"<code>/submit –ß–æ–º—É –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏ –ø'—é—Ç—å –∫–∞–≤—É? –ë–æ –±–µ–∑ –Ω–µ—ó –∫–æ–¥ –Ω–µ –∫–æ–º–ø—ñ–ª—é—î—Ç—å—Å—è! {EMOJI['brain']}</code>\n\n"
        f"üí∞ <b>–ù–∞–≥–æ—Ä–æ–¥–∏:</b>\n"
        f"‚Ä¢ +{settings.POINTS_FOR_SUBMISSION} –±–∞–ª—ñ–≤ –∑–∞ –ø–æ–¥–∞—á—É\n"
        f"‚Ä¢ +{settings.POINTS_FOR_APPROVAL} –±–∞–ª—ñ–≤ –∑–∞ —Å—Ö–≤–∞–ª–µ–Ω–Ω—è\n"
        f"‚Ä¢ +1 –±–∞–ª –∑–∞ –∫–æ–∂–µ–Ω –ª–∞–π–∫ –≤—ñ–¥ —ñ–Ω—à–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤!"
    )
    await callback_query.answer()

async def callback_start_duel(callback_query: CallbackQuery):
    """Callback –¥–ª—è –ø–æ—á–∞—Ç–∫—É –¥—É–µ–ª—ñ"""
    try:
        from handlers.duel_handlers import start_duel
        await start_duel(callback_query.message, callback_query.from_user.id)
    except ImportError:
        await callback_query.answer("–î—É–µ–ª—ñ —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ")
    await callback_query.answer()

async def callback_show_help(callback_query: CallbackQuery):
    """Callback –¥–ª—è –ø–æ–∫–∞–∑—É –¥–æ–ø–æ–º–æ–≥–∏"""
    await cmd_help(callback_query.message)
    await callback_query.answer()

async def callback_show_main_menu(callback_query: CallbackQuery):
    """Callback –¥–ª—è –ø–æ–∫–∞–∑—É –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    keyboard = get_main_menu_keyboard()
    
    await callback_query.message.edit_text(
        f"{EMOJI['fire']} <b>–ì–û–õ–û–í–ù–ï –ú–ï–ù–Æ</b>\n\n"
        f"–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:",
        reply_markup=keyboard
    )
    await callback_query.answer()

def register_basic_handlers(dp: Dispatcher):
    """–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤"""
    
    # –ö–æ–º–∞–Ω–¥–∏
    dp.message.register(cmd_start, CommandStart())
    dp.message.register(cmd_help, Command("help"))
    dp.message.register(cmd_stats, Command("stats"))
    
    # Callback –∑–∞–ø–∏—Ç–∏
    dp.callback_query.register(callback_get_meme, F.data == "get_meme")
    dp.callback_query.register(callback_get_joke, F.data == "get_joke")
    dp.callback_query.register(callback_show_profile, F.data == "show_profile")
    dp.callback_query.register(callback_show_leaderboard, F.data == "show_leaderboard")
    dp.callback_query.register(callback_toggle_daily, F.data == "toggle_daily")
    dp.callback_query.register(callback_submit_content, F.data == "submit_content")
    dp.callback_query.register(callback_start_duel, F.data == "start_duel")
    dp.callback_query.register(callback_show_help, F.data == "show_help")
    dp.callback_query.register(callback_show_main_menu, F.data == "show_main_menu")
    
    logger.info("üî• –û—Å–Ω–æ–≤–Ω—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ!")