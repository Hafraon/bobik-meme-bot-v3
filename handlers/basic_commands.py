#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üß†üòÇüî• –û–°–ù–û–í–ù–Ü –ö–û–ú–ê–ù–î–ò –ë–û–¢–ê –ó –ü–û–í–ù–û–Æ –Ü–ù–¢–ï–ì–†–ê–¶–Ü–Ñ–Æ üß†üòÇüî•
"""

import logging
from datetime import datetime
from typing import Optional

from aiogram import Dispatcher, F
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery

logger = logging.getLogger(__name__)

# Fallback –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
try:
    from config.settings import settings, EMOJI, TEXTS
    POINTS_FOR_VIEW = getattr(settings, 'POINTS_FOR_VIEW', 1)
    POINTS_FOR_DAILY_ACTIVITY = getattr(settings, 'POINTS_FOR_DAILY_ACTIVITY', 2)
except ImportError:
    import os
    POINTS_FOR_VIEW = int(os.getenv("POINTS_FOR_VIEW", "1"))
    POINTS_FOR_DAILY_ACTIVITY = int(os.getenv("POINTS_FOR_DAILY_ACTIVITY", "2"))
    
    EMOJI = {
        "brain": "üß†", "laugh": "üòÇ", "fire": "üî•", "star": "‚≠ê",
        "check": "‚úÖ", "cross": "‚ùå", "warning": "‚ö†Ô∏è", "info": "‚ÑπÔ∏è",
        "crown": "üëë", "rocket": "üöÄ", "vs": "‚öîÔ∏è", "calendar": "üìÖ",
        "profile": "üë§", "trophy": "üèÜ", "gem": "üíé", "heart": "‚ù§Ô∏è"
    }
    
    TEXTS = {
        "welcome": "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ –±–æ—Ç–∞ –º–µ–º—ñ–≤ —Ç–∞ –∞–Ω–µ–∫–¥–æ—Ç—ñ–≤!",
        "help": "–î–æ–≤—ñ–¥–∫–∞ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –±–æ—Ç–∞"
    }

# ===== –ì–û–õ–û–í–ù–ê –ö–û–ú–ê–ù–î–ê /start =====

async def cmd_start(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /start –∑ –ø–æ–≤–Ω–æ—é —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—î—é –≤—Å—ñ—Ö —Ñ—É–Ω–∫—Ü—ñ–π"""
    user_id = message.from_user.id
    first_name = message.from_user.first_name or "–¥—Ä—É–∂–µ"
    username = message.from_user.username
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ/–æ–Ω–æ–≤–ª—é—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –ë–î
    user = None
    try:
        from database import get_or_create_user
        user = await get_or_create_user(
            telegram_id=user_id,
            username=username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name
        )
        
        if user:
            logger.info(f"‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id} ({first_name}) —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ/–æ–Ω–æ–≤–ª–µ–Ω–æ")
        else:
            logger.warning(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}")
            
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}: {e}")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ —Ü–µ –∞–¥–º—ñ–Ω —ñ –ø–æ–∫–∞–∑–∞—Ç–∏ –∞–¥–º—ñ–Ω-–º–µ–Ω—é
    admin_menu_shown = False
    try:
        from handlers.admin_panel_handlers import auto_show_admin_menu_on_start
        admin_menu_shown = await auto_show_admin_menu_on_start(message)
    except ImportError:
        logger.debug("‚ö†Ô∏è –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞")
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ: {e}")
    
    # –û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–æ–≥–æ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
    user_stats = await get_user_welcome_stats(user_id)
    
    # –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–µ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
    welcome_text = await create_personalized_welcome(
        first_name, user_stats, admin_menu_shown
    )
    
    # –ü–æ–∫–∞–∑–∞—Ç–∏ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
    keyboard = get_main_menu_keyboard(user_stats)
    
    await message.answer(welcome_text, reply_markup=keyboard)
    
    # –ù–∞—Ä–∞—Ö—É–≤–∞—Ç–∏ –±–∞–ª–∏ –∑–∞ —â–æ–¥–µ–Ω–Ω—É –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å (—è–∫—â–æ –ø–µ—Ä—à–∏–π —Ä–∞–∑ —Å—å–æ–≥–æ–¥–Ω—ñ)
    await award_daily_activity_points(user_id)
    
    logger.info(f"üéâ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id} ({first_name}) –∑–∞–ø—É—Å—Ç–∏–≤ –±–æ—Ç–∞")

async def get_user_welcome_stats(user_id: int) -> dict:
    """–û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è"""
    try:
        from database import get_user_by_id
        
        user = await get_user_by_id(user_id)
        if user:
            return {
                "points": user.points,
                "rank": user.rank,
                "is_new_user": user.points == 0,
                "days_since_registration": (datetime.utcnow() - user.created_at).days,
                "total_content": user.jokes_approved + user.memes_approved,
                "duels_won": user.duels_won
            }
    except Exception as e:
        logger.debug(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {e}")
    
    return {
        "points": 0,
        "rank": "ü§° –ù–æ–≤–∞—á–æ–∫",
        "is_new_user": True,
        "days_since_registration": 0,
        "total_content": 0,
        "duels_won": 0
    }

async def create_personalized_welcome(first_name: str, user_stats: dict, is_admin: bool) -> str:
    """–°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–µ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è"""
    # –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–µ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –∑–∞ —á–∞—Å–æ–º –¥–Ω—è
    current_hour = datetime.now().hour
    if 6 <= current_hour < 12:
        time_greeting = "–î–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É"
        time_emoji = "üåÖ"
    elif 12 <= current_hour < 18:
        time_greeting = "–ì–∞—Ä–Ω–æ–≥–æ –¥–Ω—è"
        time_emoji = "‚òÄÔ∏è"
    elif 18 <= current_hour < 23:
        time_greeting = "–î–æ–±—Ä–æ–≥–æ –≤–µ—á–æ—Ä–∞"
        time_emoji = "üåÜ"
    else:
        time_greeting = "–î–æ–±—Ä–æ—ó –Ω–æ—á—ñ"
        time_emoji = "üåô"
    
    # –û—Å–Ω–æ–≤–Ω–µ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
    text = f"{time_emoji} <b>{time_greeting}, {first_name}!</b>\n\n"
    
    if is_admin:
        text += f"{EMOJI['crown']} –ê–¥–º—ñ–Ω-—Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ!\n\n"
    
    # –ü–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–ª—è –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    if user_stats["is_new_user"]:
        text += f"{EMOJI['star']} –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –Ω–∞–π–∫—Ä–∞—â–æ–≥–æ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ –±–æ—Ç–∞ –º–µ–º—ñ–≤ —Ç–∞ –∞–Ω–µ–∫–¥–æ—Ç—ñ–≤!\n\n"
        text += f"üéÆ <b>–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î:</b>\n"
        text += f"‚Ä¢ –î–∏–≤—ñ—Ç—å—Å—è –º–µ–º–∏ —Ç–∞ –∞–Ω–µ–∫–¥–æ—Ç–∏ (+{POINTS_FOR_VIEW} –±–∞–ª)\n"
        text += f"‚Ä¢ –°—Ç–∞–≤—Ç–µ –ª–∞–π–∫–∏ —Ç–∞ –¥–∏–∑–ª–∞–π–∫–∏ (+5 –±–∞–ª—ñ–≤)\n"
        text += f"‚Ä¢ –ù–∞–¥—Å–∏–ª–∞–π—Ç–µ —Å–≤–æ—ó –∂–∞—Ä—Ç–∏ (+10 –±–∞–ª—ñ–≤)\n"
        text += f"‚Ä¢ –ë–µ—Ä—ñ—Ç—å —É—á–∞—Å—Ç—å –≤ –¥—É–µ–ª—è—Ö (+15 –±–∞–ª—ñ–≤ –∑–∞ –ø–µ—Ä–µ–º–æ–≥—É)\n"
        text += f"‚Ä¢ –ü—ñ–¥–ø–∏—Å—É–π—Ç–µ—Å—å –Ω–∞ —â–æ–¥–µ–Ω–Ω—É —Ä–æ–∑—Å–∏–ª–∫—É (+{POINTS_FOR_DAILY_ACTIVITY} –±–∞–ª—ñ–≤ —â–æ–¥–Ω—è)\n\n"
        text += f"üèÜ –ó–±–∏—Ä–∞–π—Ç–µ –±–∞–ª–∏, –ø—ñ–¥–≤–∏—â—É–π—Ç–µ —Ä–∞–Ω–≥ —Ç–∞ —Å—Ç–∞–≤–∞–π—Ç–µ –ª–µ–≥–µ–Ω–¥–æ—é –≥—É–º–æ—Ä—É!\n\n"
    else:
        # –ü–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–ª—è –ø–æ—Å—Ç—ñ–π–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
        text += f"üé≠ –ó –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è–º! –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å:\n"
        text += f"üí∞ –ë–∞–ª–∏: {user_stats['points']:,}\n"
        text += f"üèÜ –†–∞–Ω–≥: {user_stats['rank']}\n"
        
        if user_stats["total_content"] > 0:
            text += f"üìù –°—Ö–≤–∞–ª–µ–Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É: {user_stats['total_content']}\n"
        
        if user_stats["duels_won"] > 0:
            text += f"‚öîÔ∏è –î—É–µ–ª—ñ–≤ –≤–∏–≥—Ä–∞–Ω–æ: {user_stats['duels_won']}\n"
        
        text += f"üìÖ –ó –Ω–∞–º–∏: {user_stats['days_since_registration']} –¥–Ω—ñ–≤\n\n"
        
        # –ú–æ—Ç–∏–≤–∞—Ü—ñ–π–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        if user_stats["points"] < 50:
            text += f"üéØ –©–µ —Ç—Ä–æ—Ö–∏ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä–∞–Ω–≥—É!\n"
        elif user_stats["points"] >= 1000:
            text += f"üåü –í–∏ —Å–ø—Ä–∞–≤–∂–Ω—è –ª–µ–≥–µ–Ω–¥–∞ –≥—É–º–æ—Ä—É!\n"
        else:
            text += f"üî• –ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –≤ —Ç–æ–º—É –∂ –¥—É—Å—ñ!\n"
        
        text += "\n"
    
    text += f"–û–±–µ—Ä—ñ—Ç—å —â–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å: üëá"
    
    return text

def get_main_menu_keyboard(user_stats: dict) -> InlineKeyboardMarkup:
    """–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    keyboard = []
    
    # –ü–µ—Ä—à–∏–π —Ä—è–¥–æ–∫ - –æ—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
    keyboard.append([
        InlineKeyboardButton(
            text=f"{EMOJI['laugh']} –ú–µ–º (+{POINTS_FOR_VIEW})",
            callback_data="get_meme"
        ),
        InlineKeyboardButton(
            text=f"{EMOJI['brain']} –ê–Ω–µ–∫–¥–æ—Ç (+{POINTS_FOR_VIEW})",
            callback_data="get_anekdot"
        )
    ])
    
    # –î—Ä—É–≥–∏–π —Ä—è–¥–æ–∫ - –ø—Ä–æ—Ñ—ñ–ª—å —Ç–∞ –ª—ñ–¥–µ—Ä–∏
    keyboard.append([
        InlineKeyboardButton(
            text=f"{EMOJI['profile']} –ü—Ä–æ—Ñ—ñ–ª—å",
            callback_data="show_profile"
        ),
        InlineKeyboardButton(
            text=f"{EMOJI['trophy']} –õ—ñ–¥–µ—Ä–∏",
            callback_data="show_leaderboard"
        )
    ])
    
    # –¢—Ä–µ—Ç—ñ–π —Ä—è–¥–æ–∫ - —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤
    keyboard.append([
        InlineKeyboardButton(
            text=f"{EMOJI['fire']} –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∂–∞—Ä—Ç (+10)",
            callback_data="submit_content"
        ),
        InlineKeyboardButton(
            text=f"{EMOJI['vs']} –î—É–µ–ª—å (+15)",
            callback_data="start_duel"
        )
    ])
    
    # –ß–µ—Ç–≤–µ—Ä—Ç–∏–π —Ä—è–¥–æ–∫ - –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    keyboard.append([
        InlineKeyboardButton(
            text=f"{EMOJI['calendar']} –©–æ–¥–µ–Ω–Ω–∞ —Ä–æ–∑—Å–∏–ª–∫–∞ (+{POINTS_FOR_DAILY_ACTIVITY})",
            callback_data="toggle_daily"
        ),
        InlineKeyboardButton(
            text=f"{EMOJI['info']} –î–æ–ø–æ–º–æ–≥–∞",
            callback_data="show_help"
        )
    ])
    
    # –ü'—è—Ç–∏–π —Ä—è–¥–æ–∫ - –¥–æ–¥–∞—Ç–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    if not user_stats["is_new_user"]:
        keyboard.append([
            InlineKeyboardButton(
                text=f"{EMOJI['gem']} –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è",
                callback_data="show_achievements"
            ),
            InlineKeyboardButton(
                text=f"{EMOJI['rocket']} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                callback_data="show_detailed_stats"
            )
        ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def award_daily_activity_points(user_id: int):
    """–ù–∞—Ä–∞—Ö—É–≤–∞—Ç–∏ –±–∞–ª–∏ –∑–∞ —â–æ–¥–µ–Ω–Ω—É –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å"""
    try:
        from database import get_user_by_id, update_user_points
        
        user = await get_user_by_id(user_id)
        if user:
            # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ —Ü–µ –ø–µ—Ä—à–∏–π /start —Å—å–æ–≥–æ–¥–Ω—ñ
            today = datetime.utcnow().date()
            last_active_date = user.last_active.date() if user.last_active else None
            
            if last_active_date != today:
                # –ù–∞—Ä–∞—Ö—É–≤–∞—Ç–∏ –±–∞–ª–∏ –∑–∞ —â–æ–¥–µ–Ω–Ω—É –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
                await update_user_points(user_id, POINTS_FOR_DAILY_ACTIVITY, "—â–æ–¥–µ–Ω–Ω–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å")
                logger.info(f"üí∞ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id}: +{POINTS_FOR_DAILY_ACTIVITY} –±–∞–ª—ñ–≤ –∑–∞ —â–æ–¥–µ–Ω–Ω—É –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å")
        
    except Exception as e:
        logger.debug(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞—Ä–∞—Ö—É–≤–∞—Ç–∏ —â–æ–¥–µ–Ω–Ω—ñ –±–∞–ª–∏: {e}")

# ===== –ö–û–ú–ê–ù–î–ê /help =====

async def cmd_help(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /help - –ø–æ–≤–Ω–∞ –¥–æ–≤—ñ–¥–∫–∞"""
    help_text = f"{EMOJI['info']} <b>–ü–û–í–ù–ê –î–û–í–Ü–î–ö–ê –ü–û –ë–û–¢–£</b>\n\n"
    
    # –û—Å–Ω–æ–≤–Ω—ñ –∫–æ–º–∞–Ω–¥–∏
    help_text += f"üìã <b>–û—Å–Ω–æ–≤–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:</b>\n"
    help_text += f"‚Ä¢ /start - –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é —Ç–∞ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è\n"
    help_text += f"‚Ä¢ /meme - –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –º–µ–º\n"
    help_text += f"‚Ä¢ /anekdot - —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –∞–Ω–µ–∫–¥–æ—Ç\n"
    help_text += f"‚Ä¢ /submit [—Ç–µ–∫—Å—Ç] - –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∂–∞—Ä—Ç\n"
    help_text += f"‚Ä¢ /profile - –≤–∞—à –ø—Ä–æ—Ñ—ñ–ª—å —Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
    help_text += f"‚Ä¢ /top - —Ç–∞–±–ª–∏—Ü—è –ª—ñ–¥–µ—Ä—ñ–≤\n"
    help_text += f"‚Ä¢ /duel [—Ç–µ–∫—Å—Ç] - —Å—Ç–≤–æ—Ä–∏—Ç–∏ –¥—É–µ–ª—å –∂–∞—Ä—Ç—ñ–≤\n"
    help_text += f"‚Ä¢ /daily - –ø—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–æ–∑—Å–∏–ª–∫—É\n\n"
    
    # –°–∏—Å—Ç–µ–º–∞ –±–∞–ª—ñ–≤
    help_text += f"üí∞ <b>–°–∏—Å—Ç–µ–º–∞ –±–∞–ª—ñ–≤:</b>\n"
    help_text += f"‚Ä¢ +{POINTS_FOR_VIEW} - –ø–µ—Ä–µ–≥–ª—è–¥ –º–µ–º—É/–∞–Ω–µ–∫–¥–æ—Ç—É\n"
    help_text += f"‚Ä¢ +5 - –ª–∞–π–∫ –∞–±–æ –¥–∏–∑–ª–∞–π–∫\n"
    help_text += f"‚Ä¢ +10 - –ø–æ–¥–∞—á–∞ –∂–∞—Ä—Ç—É –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—é\n"
    help_text += f"‚Ä¢ +20 - —Å—Ö–≤–∞–ª–µ–Ω–Ω—è –≤–∞—à–æ–≥–æ –∂–∞—Ä—Ç—É\n"
    help_text += f"‚Ä¢ +15 - –ø–µ—Ä–µ–º–æ–≥–∞ –≤ –¥—É–µ–ª—ñ\n"
    help_text += f"‚Ä¢ +{POINTS_FOR_DAILY_ACTIVITY} - —â–æ–¥–µ–Ω–Ω–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å\n"
    help_text += f"‚Ä¢ +2 - –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è –≤ –¥—É–µ–ª—ñ\n\n"
    
    # –†–∞–Ω–≥–∏
    help_text += f"üèÜ <b>–°–∏—Å—Ç–µ–º–∞ —Ä–∞–Ω–≥—ñ–≤:</b>\n"
    help_text += f"ü§° –ù–æ–≤–∞—á–æ–∫ (0+ –±–∞–ª—ñ–≤)\n"
    help_text += f"üòÑ –°–º—ñ—Ö—É–Ω (50+ –±–∞–ª—ñ–≤)\n"
    help_text += f"üòÇ –ì—É–º–æ—Ä–∏—Å—Ç (150+ –±–∞–ª—ñ–≤)\n"
    help_text += f"üé≠ –ö–æ–º—ñ–∫ (350+ –±–∞–ª—ñ–≤)\n"
    help_text += f"üëë –ú–∞—Å—Ç–µ—Ä –†–æ—Ñ–ª—É (750+ –±–∞–ª—ñ–≤)\n"
    help_text += f"üèÜ –ö–æ—Ä–æ–ª—å –ì—É–º–æ—Ä—É (1500+ –±–∞–ª—ñ–≤)\n"
    help_text += f"üåü –õ–µ–≥–µ–Ω–¥–∞ –ú–µ–º—ñ–≤ (3000+ –±–∞–ª—ñ–≤)\n"
    help_text += f"üöÄ –ì—É–º–æ—Ä–∏—Å—Ç–∏—á–Ω–∏–π –ì–µ–Ω—ñ–π (5000+ –±–∞–ª—ñ–≤)\n\n"
    
    # –î—É–µ–ª—ñ
    help_text += f"‚öîÔ∏è <b>–î—É–µ–ª—ñ –∂–∞—Ä—Ç—ñ–≤:</b>\n"
    help_text += f"‚Ä¢ –°—Ç–≤–æ—Ä—é–π—Ç–µ –¥—É–µ–ª—ñ –∑—ñ —Å–≤–æ—ó–º–∏ –∂–∞—Ä—Ç–∞–º–∏\n"
    help_text += f"‚Ä¢ –Ü–Ω—à—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –≥–æ–ª–æ—Å—É—é—Ç—å –∑–∞ –Ω–∞–π—Å–º—ñ—à–Ω—ñ—à–∏–π\n"
    help_text += f"‚Ä¢ –ü–µ—Ä–µ–º–æ–∂–µ—Ü—å –æ—Ç—Ä–∏–º—É—î +15 –±–∞–ª—ñ–≤\n"
    help_text += f"‚Ä¢ –£—á–∞—Å–Ω–∏–∫ –æ—Ç—Ä–∏–º—É—î +5 –±–∞–ª—ñ–≤\n"
    help_text += f"‚Ä¢ –ì–æ–ª–æ—Å—É—é—á—ñ –æ—Ç—Ä–∏–º—É—é—Ç—å +2 –±–∞–ª–∏\n\n"
    
    # –ú–æ–¥–µ—Ä–∞—Ü—ñ—è
    help_text += f"üõ°Ô∏è <b>–ú–æ–¥–µ—Ä–∞—Ü—ñ—è –∫–æ–Ω—Ç–µ–Ω—Ç—É:</b>\n"
    help_text += f"‚Ä¢ –í–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç –ø–µ—Ä–µ–≤—ñ—Ä—è—î—Ç—å—Å—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏\n"
    help_text += f"‚Ä¢ –°—Ö–≤–∞–ª–µ–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –±–∞—á–∞—Ç—å –≤—Å—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ\n"
    help_text += f"‚Ä¢ –ó–∞ —Å—Ö–≤–∞–ª–µ–Ω–Ω—è –≤–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ +20 –±–∞–ª—ñ–≤\n"
    help_text += f"‚Ä¢ –Ø–∫—ñ—Å–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –º–æ–∂–µ –ø–æ—Ç—Ä–∞–ø–∏—Ç–∏ –≤ –¢–û–ü\n\n"
    
    # –ü–æ—Ä–∞–¥–∏
    help_text += f"üí° <b>–ü–æ—Ä–∞–¥–∏ –¥–ª—è —É—Å–ø—ñ—Ö—É:</b>\n"
    help_text += f"‚Ä¢ –ù–∞–¥—Å–∏–ª–∞–π—Ç–µ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ —Ç–∞ —Å–º—ñ—à–Ω—ñ –∂–∞—Ä—Ç–∏\n"
    help_text += f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω–æ –≥–æ–ª–æ—Å—É–π—Ç–µ –≤ –¥—É–µ–ª—è—Ö\n"
    help_text += f"‚Ä¢ –ü—ñ–¥–ø–∏—à—ñ—Ç—å—Å—è –Ω–∞ —â–æ–¥–µ–Ω–Ω—É —Ä–æ–∑—Å–∏–ª–∫—É\n"
    help_text += f"‚Ä¢ –ó–∞–ø—Ä–æ—à—É–π—Ç–µ –¥—Ä—É–∑—ñ–≤ –¥–æ –±–æ—Ç–∞\n"
    help_text += f"‚Ä¢ –°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ —Å–≤–æ—ó–º —Ä–∞–Ω–≥–æ–º —É –ø—Ä–æ—Ñ—ñ–ª—ñ\n\n"
    
    help_text += f"üí¨ –ó –ø–∏—Ç–∞–Ω–Ω—è–º–∏ –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞!"
    
    # –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–æ–≤—ñ–¥–∫–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="back_to_main"),
            InlineKeyboardButton(text="üë§ –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å", callback_data="show_profile")
        ],
        [
            InlineKeyboardButton(text="üéÆ –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –¥—É–µ–ª—å", callback_data="start_duel"),
            InlineKeyboardButton(text="üìù –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∂–∞—Ä—Ç", callback_data="submit_content")
        ]
    ])
    
    await message.answer(help_text, reply_markup=keyboard)

# ===== –ö–û–ú–ê–ù–î–ê /daily =====

async def cmd_daily(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /daily - —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–æ—é —Ä–æ–∑—Å–∏–ª–∫–æ—é"""
    user_id = message.from_user.id
    
    try:
        from database import get_user_by_id, get_db_session
        
        user = await get_user_by_id(user_id)
        if not user:
            await message.answer("‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ /start")
            return
        
        # –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É
        new_status = not user.daily_subscription
        
        with get_db_session() as session:
            user.daily_subscription = new_status
            session.commit()
        
        if new_status:
            response_text = (
                f"{EMOJI['check']} <b>–ü—ñ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∞!</b>\n\n"
                f"üìÖ –©–æ–¥–Ω—è –æ 9:00 –≤–∏ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏–º–µ—Ç–µ:\n"
                f"‚Ä¢ –ö—Ä–∞—â–∏–π –∂–∞—Ä—Ç –¥–Ω—è\n"
                f"‚Ä¢ –¢–æ–ø–æ–≤–∏–π –º–µ–º\n"
                f"‚Ä¢ +{POINTS_FOR_DAILY_ACTIVITY} –±–∞–ª—ñ–≤ –∑–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å\n\n"
                f"üîï –©–æ–± –≤—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ /daily –∑–Ω–æ–≤—É"
            )
            
            # –ù–∞—Ä–∞—Ö—É–≤–∞—Ç–∏ –±–æ–Ω—É—Å–Ω—ñ –±–∞–ª–∏ –∑–∞ –ø—ñ–¥–ø–∏—Å–∫—É
            from database import update_user_points
            await update_user_points(user_id, 5, "–ø—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–æ–∑—Å–∏–ª–∫—É")
            
        else:
            response_text = (
                f"{EMOJI['cross']} <b>–ü—ñ–¥–ø–∏—Å–∫–∞ –≤—ñ–¥–∫–ª—é—á–µ–Ω–∞</b>\n\n"
                f"üòî –í–∏ –±—ñ–ª—å—à–µ –Ω–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏–º–µ—Ç–µ —â–æ–¥–µ–Ω–Ω—É —Ä–æ–∑—Å–∏–ª–∫—É.\n\n"
                f"üìÖ –©–æ–± –ø—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –∑–Ω–æ–≤—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ /daily"
            )
        
        await message.answer(response_text)
        
        logger.info(f"üìÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id} {'–ø—ñ–¥–ø–∏—Å–∞–≤—Å—è' if new_status else '–≤—ñ–¥–ø–∏—Å–∞–≤—Å—è'} –≤—ñ–¥ —Ä–æ–∑—Å–∏–ª–∫–∏")
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ä–æ–∑—Å–∏–ª–∫–æ—é: {e}")
        await message.answer("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —Ä–æ–∑—Å–∏–ª–∫–∏")

# ===== CALLBACK –•–ï–ù–î–õ–ï–†–ò =====

async def callback_back_to_main(callback_query: CallbackQuery):
    """–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    user_id = callback_query.from_user.id
    first_name = callback_query.from_user.first_name or "–¥—Ä—É–∂–µ"
    
    user_stats = await get_user_welcome_stats(user_id)
    
    welcome_text = f"{EMOJI['fire']} <b>–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é</b>\n\n"
    welcome_text += f"–ü—Ä–∏–≤—ñ—Ç, {first_name}!\n"
    welcome_text += f"üí∞ –í–∞—à—ñ –±–∞–ª–∏: {user_stats['points']:,}\n"
    welcome_text += f"üèÜ –í–∞—à —Ä–∞–Ω–≥: {user_stats['rank']}\n\n"
    welcome_text += f"–©–æ –±–∞–∂–∞—î—Ç–µ –∑—Ä–æ–±–∏—Ç–∏?"
    
    keyboard = get_main_menu_keyboard(user_stats)
    
    await callback_query.message.edit_text(welcome_text, reply_markup=keyboard)
    await callback_query.answer()

async def callback_show_help(callback_query: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç–∏ –¥–æ–≤—ñ–¥–∫—É —á–µ—Ä–µ–∑ callback"""
    # –í–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–æ–≤–µ
    await callback_query.message.delete()
    await cmd_help(callback_query.message)
    await callback_query.answer()

async def callback_toggle_daily(callback_query: CallbackQuery):
    """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–∏ —â–æ–¥–µ–Ω–Ω—É —Ä–æ–∑—Å–∏–ª–∫—É"""
    user_id = callback_query.from_user.id
    
    try:
        from database import get_user_by_id, get_db_session
        
        user = await get_user_by_id(user_id)
        if not user:
            await callback_query.answer("‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π", show_alert=True)
            return
        
        # –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å
        new_status = not user.daily_subscription
        
        with get_db_session() as session:
            user.daily_subscription = new_status
            session.commit()
        
        status_text = "–ø—ñ–¥–∫–ª—é—á–µ–Ω–æ" if new_status else "–≤—ñ–¥–∫–ª—é—á–µ–Ω–æ"
        points_text = f" (+5 –±–∞–ª—ñ–≤)" if new_status else ""
        
        await callback_query.answer(
            f"üìÖ –©–æ–¥–µ–Ω–Ω—É —Ä–æ–∑—Å–∏–ª–∫—É {status_text}!{points_text}",
            show_alert=True
        )
        
        # –ù–∞—Ä–∞—Ö—É–≤–∞—Ç–∏ –±–æ–Ω—É—Å–Ω—ñ –±–∞–ª–∏ –∑–∞ –ø—ñ–¥–ø–∏—Å–∫—É
        if new_status:
            from database import update_user_points
            await update_user_points(user_id, 5, "–ø—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–æ–∑—Å–∏–ª–∫—É")
        
        logger.info(f"üìÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id} {'–ø—ñ–¥–ø–∏—Å–∞–≤—Å—è' if new_status else '–≤—ñ–¥–ø–∏—Å–∞–≤—Å—è'}")
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ toggle daily: {e}")
        await callback_query.answer("‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å", show_alert=True)

# ===== –†–ï–Ñ–°–¢–†–ê–¶–Ü–Ø –•–ï–ù–î–õ–ï–†–Ü–í =====

def register_basic_handlers(dp: Dispatcher):
    """–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤"""
    
    # –ö–æ–º–∞–Ω–¥–∏
    dp.message.register(cmd_start, CommandStart())
    dp.message.register(cmd_help, Command("help"))
    dp.message.register(cmd_daily, Command("daily"))
    
    # Callback –∑–∞–ø–∏—Ç–∏
    dp.callback_query.register(callback_back_to_main, F.data == "back_to_main")
    dp.callback_query.register(callback_show_help, F.data == "show_help")
    dp.callback_query.register(callback_toggle_daily, F.data == "toggle_daily")
    
    logger.info("‚úÖ –û—Å–Ω–æ–≤–Ω—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")

# ===== –ï–ö–°–ü–û–†–¢ =====

__all__ = [
    'register_basic_handlers', 
    'cmd_start', 
    'cmd_help', 
    'cmd_daily',
    'get_main_menu_keyboard',
    'create_personalized_welcome'
]