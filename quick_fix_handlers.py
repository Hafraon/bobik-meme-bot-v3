#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üîß –®–í–ò–î–ö–ï –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø HANDLERS üîß

–¶–µ–π —Å–∫—Ä–∏–ø—Ç –≤–∏–ø—Ä–∞–≤–ª—è—î –ø—Ä–æ–±–ª–µ–º—É –∑ register_all_handlers
"""

from pathlib import Path

def fix_handlers_init():
    """–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è app/handlers/__init__.py"""
    
    print("üîß –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø APP/HANDLERS/__INIT__.PY:")
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫—É handlers —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î
    handlers_dir = Path("app/handlers")
    handlers_dir.mkdir(exist_ok=True, parents=True)
    
    handlers_init_content = '''#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üéØ HANDLERS –ú–û–î–£–õ–¨ - –í–ò–ü–†–ê–í–õ–ï–ù–ê –†–ï–Ñ–°–¢–†–ê–¶–Ü–Ø üéØ
"""

import logging
from aiogram import Dispatcher
from aiogram import F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, CommandStart

logger = logging.getLogger(__name__)

def register_all_handlers(dp: Dispatcher):
    """üéØ –ì–û–õ–û–í–ù–ê –§–£–ù–ö–¶–Ü–Ø –†–ï–Ñ–°–¢–†–ê–¶–Ü–á –í–°–Ü–• HANDLERS"""
    logger.info("üéØ –ü–æ—á–∞—Ç–æ–∫ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó handlers...")
    
    # –°–ø—Ä–æ–±—É—î–º–æ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏ –æ—Å–Ω–æ–≤–Ω—ñ handlers
    registered = 0
    
    handler_modules = [
        "basic_commands",
        "content_handlers", 
        "gamification_handlers",
        "duel_handlers",
        "moderation_handlers",
        "admin_handlers",
        "admin_panel_handlers",
    ]
    
    for module_name in handler_modules:
        try:
            module = __import__(f"handlers.{module_name}", fromlist=["register"])
            if hasattr(module, f"register_{module_name}"):
                register_func = getattr(module, f"register_{module_name}")
                register_func(dp)
                registered += 1
                logger.info(f"‚úÖ {module_name} –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")
        except ImportError:
            logger.warning(f"‚ö†Ô∏è –ú–æ–¥—É–ª—å {module_name} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó {module_name}: {e}")
    
    # –Ø–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ fallback
    if registered == 0:
        logger.warning("‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é fallback handlers")
        register_fallback_handlers(dp)
    
    logger.info(f"‚úÖ Handlers –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ: {registered} –æ—Å–Ω–æ–≤–Ω–∏—Ö + fallback")

def register_fallback_handlers(dp: Dispatcher):
    """üÜò Fallback handlers"""
    
    @dp.message(CommandStart())
    async def start_handler(message: Message):
        await message.answer(
            "ü§ñ <b>–ü—Ä–∏–≤—ñ—Ç! –Ø —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –º–µ–º-–±–æ—Ç –∑ –≥–µ–π–º—ñ—Ñ—ñ–∫–∞—Ü—ñ—î—é!</b>\\n\\n"
            "üìã <b>–ö–æ–º–∞–Ω–¥–∏:</b>\\n"
            "‚Ä¢ /help - –¥–æ–≤—ñ–¥–∫–∞\\n"
            "‚Ä¢ /meme - –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –º–µ–º\\n"
            "‚Ä¢ /anekdot - —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –∞–Ω–µ–∫–¥–æ—Ç\\n"
            "‚Ä¢ /profile - –º—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å\\n"
            "‚Ä¢ /admin - –ø–∞–Ω–µ–ª—å –∞–¥–º—ñ–Ω–∞"
        )
    
    @dp.message(Command("help"))
    async def help_handler(message: Message):
        await message.answer(
            "‚ùì <b>–î–û–í–Ü–î–ö–ê –ü–û –ë–û–¢–£</b>\\n\\n"
            "üéÆ <b>–ì–µ–π–º—ñ—Ñ—ñ–∫–∞—Ü—ñ—è:</b>\\n"
            "‚Ä¢ –ó–∞—Ä–æ–±–ª—è–π—Ç–µ –±–∞–ª–∏ –∑–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å\\n"
            "‚Ä¢ –ü—ñ–¥–≤–∏—â—É–π—Ç–µ —Å–≤—ñ–π —Ä–∞–Ω–≥\\n\\n"
            "üìù <b>–ö–æ–Ω—Ç–µ–Ω—Ç:</b>\\n"
            "‚Ä¢ /meme - –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –º–µ–º\\n"
            "‚Ä¢ /anekdot - —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –∞–Ω–µ–∫–¥–æ—Ç\\n\\n"
            "üë§ <b>–ü—Ä–æ—Ñ—ñ–ª—å:</b>\\n"
            "‚Ä¢ /profile - –≤–∞—à –ø—Ä–æ—Ñ—ñ–ª—å"
        )
    
    @dp.message(Command("meme"))
    async def meme_handler(message: Message):
        memes = [
            "üòÇ –ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç –∑–∞—Ö–æ–¥–∏—Ç—å –≤ –∫–∞—Ñ–µ —ñ –∑–∞–º–æ–≤–ª—è—î –∫–∞–≤—É. –ë–∞—Ä–∏—Å—Ç–∞: 'Java —á–∏ Python?' –ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç: '–ó–≤–∏—á–∞–π–Ω—É!'",
            "ü§£ –ß–æ–º—É –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏ –ø–ª—É—Ç–∞—é—Ç—å –†—ñ–∑–¥–≤–æ —Ç–∞ –•–µ–ª–ª–æ—É—ó–Ω? –ë–æ Oct 31 == Dec 25!",
            "üòÑ –°–∫—ñ–ª—å–∫–∏ –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç—ñ–≤ —Ç—Ä–µ–±–∞ —â–æ–± –∑–∞–∫—Ä—É—Ç–∏—Ç–∏ –ª–∞–º–ø–æ—á–∫—É? –ñ–æ–¥–Ω–æ–≥–æ - —Ü–µ –∞–ø–∞—Ä–∞—Ç–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞!"
        ]
        import random
        await message.answer(f"üé≠ {random.choice(memes)}")
    
    @dp.message(Command("anekdot"))
    async def anekdot_handler(message: Message):
        anekdots = [
            "üá∫üá¶ –£–∫—Ä–∞—ó–Ω–µ—Ü—å –Ω–∞–ø–∏—Å–∞–≤ –∫–æ–¥. –ë—ñ–ª–æ—Ä—É—Å –æ–ø—Ç–∏–º—ñ–∑—É–≤–∞–≤. –†–æ—Å—ñ—è–Ω–∏–Ω —Å–∫–æ–ø—ñ—é–≤–∞–≤ —ñ —Å–∫–∞–∑–∞–≤ —â–æ —Å–∞–º –ø—Ä–∏–¥—É–º–∞–≤.",
            "üòÇ –ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç —É –ª—ñ–∫–∞—Ä—è: '–ë–æ–ª–∏—Ç—å —Å–ø–∏–Ω–∞!' '–ë–∞–≥–∞—Ç–æ —Å–∏–¥–∏—à?' '–¢—ñ–ª—å–∫–∏ 18 –≥–æ–¥–∏–Ω!' '–ù–æ—Ä–º–∞–ª—å–Ω–æ!'",
            "ü§£ –ß–æ–º—É –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏ –Ω–µ –ª—é–±–ª—è—Ç—å –ø—Ä–∏—Ä–æ–¥—É? –ë–∞–≥–∞—Ç–æ –±–∞–≥—ñ–≤ —ñ –Ω–µ–º–∞—î –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó!"
        ]
        import random
        await message.answer(f"üé≠ {random.choice(anekdots)}")
    
    @dp.message(Command("profile"))
    async def profile_handler(message: Message):
        user = message.from_user
        await message.answer(
            f"üë§ <b>–ü–†–û–§–Ü–õ–¨</b>\\n\\n"
            f"üÜî ID: {user.id}\\n"
            f"üë§ –Ü–º'—è: {user.first_name or '–ù–µ–≤—ñ–¥–æ–º–µ'}\\n"
            f"üìä –ë–∞–ª–∏: 0\\n"
            f"üèÜ –†–∞–Ω–≥: ü§° –ù–æ–≤–∞—á–æ–∫"
        )
    
    @dp.message(Command("admin"))
    async def admin_handler(message: Message):
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        try:
            import os
            admin_id = int(os.getenv("ADMIN_ID", 603047391))
            if message.from_user.id == admin_id:
                await message.answer("üëë <b>–ü–ê–ù–ï–õ–¨ –ê–î–ú–Ü–ù–Ü–°–¢–†–ê–¢–û–†–ê</b>\\n\\n–§—É–Ω–∫—Ü—ñ—ó –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ...")
            else:
                await message.answer("‚ùå –ù–µ–º–∞—î –ø—Ä–∞–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        except:
            await message.answer("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—Ä–∞–≤")
    
    @dp.error()
    async def error_handler(event, exception):
        logger.error(f"‚ùå Error: {exception}")
        try:
            if hasattr(event, 'message') and event.message:
                await event.message.answer("üòÖ –¢–µ—Ö–Ω—ñ—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞! –°–ø—Ä–æ–±—É–π—Ç–µ /help")
        except:
            pass

# –ï–∫—Å–ø–æ—Ä—Ç
__all__ = ['register_all_handlers']

logger.info("üéÆ Handlers –º–æ–¥—É–ª—å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ fallback –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é")
'''
    
    # –ó–∞–ø–∏—Å—É—î–º–æ —Ñ–∞–π–ª
    with open("app/handlers/__init__.py", "w", encoding="utf-8") as f:
        f.write(handlers_init_content)
    
    print("   ‚úÖ app/handlers/__init__.py —Å—Ç–≤–æ—Ä–µ–Ω–æ –∑ register_all_handlers")
    return True

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    print("üîß –®–í–ò–î–ö–ï –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø HANDLERS")
    print("=" * 40)
    
    try:
        success = fix_handlers_init()
        
        if success:
            print("\n‚úÖ –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø –ó–ê–í–ï–†–®–ï–ù–û!")
            print("\n–ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:")
            print("1. git add .")
            print("2. git commit -m 'üîß Fix handlers registration'") 
            print("3. git push")
            print("\n–û—á—ñ–∫—É–≤–∞–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏:")
            print("‚úÖ –ó–Ω–∏–∫–Ω–µ –ø–æ–º–∏–ª–∫–∞: cannot import name 'register_all_handlers'")
            print("‚úÖ –í—Å—ñ –∫–æ–º–∞–Ω–¥–∏ –±—É–¥—É—Ç—å –æ–±—Ä–æ–±–ª—è—Ç–∏—Å—è")
            print("‚úÖ Updates handled –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        else:
            print("\n‚ùå –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–µ –≤–¥–∞–ª–æ—Å—è")
            
    except Exception as e:
        print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

if __name__ == "__main__":
    main()